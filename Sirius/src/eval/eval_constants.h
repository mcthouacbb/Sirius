#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[6] = {S(60, 85), S(273, 342), S(279, 353), S(377, 625), S(802, 1186), S(0, 0)};

constexpr PackedScore PSQT[6][64] = {
	{
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
		S(  30,   98), S(  37,   97), S(  18,   96), S(  51,   46), S(  26,   48), S(  25,   54), S( -42,  107), S( -17,   98),
		S(   4,   43), S(  -1,   59), S(  23,   16), S(  27,  -19), S(  34,  -21), S(  69,   -7), S(  35,   42), S(  34,   27),
		S( -16,   24), S( -12,   28), S(  -4,    6), S(  -8,   -7), S(  12,   -7), S(  22,   -8), S(   6,   21), S(  25,   -2),
		S( -22,    4), S( -18,   17), S(  -9,   -3), S(  -1,   -6), S(   3,   -6), S(  11,   -9), S(  -1,   10), S(  20,  -16),
		S( -25,   -2), S( -15,    9), S( -12,   -3), S( -11,    0), S(   7,    0), S(   4,   -5), S(  20,    0), S(  24,  -21),
		S( -20,   -1), S( -12,   10), S(  -9,    0), S( -13,    1), S(   4,    6), S(  26,   -7), S(  31,   -3), S(  21,  -24),
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
	},
	{
		S(-104,  -33), S(-105,   -6), S( -57,    4), S( -19,   -8), S(  11,   -4), S( -34,  -26), S( -83,   -5), S( -63,  -53),
		S( -19,   -2), S( -12,    6), S(   2,    1), S(  23,   -1), S(  22,   -9), S(  57,  -22), S(   3,   -3), S(  22,  -20),
		S(  -6,   -4), S(  11,    0), S(  25,    9), S(  39,    8), S(  57,   -2), S(  85,  -18), S(  34,   -9), S(  42,  -17),
		S(   4,    9), S(  13,    8), S(  29,   15), S(  53,   17), S(  45,   12), S(  55,   11), S(  30,    5), S(  43,   -3),
		S(  -5,   14), S(   3,    3), S(  12,   16), S(  23,   18), S(  25,   23), S(  25,    8), S(  28,    2), S(   8,   10),
		S( -21,    0), S( -10,   -1), S(  -4,    1), S(  -2,   15), S(  12,   14), S(   1,   -4), S(  10,   -3), S(  -5,    2),
		S( -26,    3), S( -23,    5), S( -15,   -3), S(   2,    0), S(   0,   -1), S(  -1,   -4), S(  -3,   -3), S(  -6,   16),
		S( -62,   15), S( -14,   -7), S( -32,   -3), S( -20,   -2), S( -15,    3), S(  -9,   -7), S( -13,    1), S( -34,   11),
	},
	{
		S( -16,    5), S( -48,   10), S( -39,    2), S( -75,   11), S( -61,    6), S( -47,   -5), S( -28,    0), S( -44,   -4),
		S( -11,   -8), S( -18,   -2), S( -17,   -3), S( -19,   -3), S(  -7,  -10), S(  -2,  -11), S( -18,   -2), S(   9,  -12),
		S(   1,    9), S(  10,   -2), S(   2,    0), S(  13,   -8), S(  12,   -5), S(  47,   -4), S(  35,   -5), S(  32,    5),
		S( -11,    7), S(  -3,   10), S(   4,    1), S(  19,   10), S(  11,    2), S(  13,    5), S(  -3,    8), S(  -1,    4),
		S(  -5,    5), S( -11,    8), S(   0,    6), S(  11,    5), S(  12,    2), S(  -2,    3), S(  -5,    5), S(   8,   -4),
		S(   2,    5), S(  11,    4), S(   5,    3), S(   9,    5), S(  10,    9), S(   8,    2), S(  11,   -3), S(  18,    0),
		S(  25,   10), S(   8,   -9), S(  19,  -11), S(   2,    0), S(   9,    2), S(  17,   -7), S(  27,   -5), S(  22,   -4),
		S(  12,   -2), S(  27,    5), S(  10,   -1), S(  -3,    3), S(   2,    0), S(   2,   10), S(  21,   -9), S(  29,  -14),
	},
	{
		S(  -7,   19), S( -11,   22), S( -12,   29), S( -15,   25), S(   4,   17), S(  29,   11), S(  20,   16), S(  38,    9),
		S( -15,   14), S( -10,   20), S(   2,   22), S(  19,   10), S(  10,   11), S(  33,    4), S(  38,    1), S(  56,   -7),
		S( -23,   11), S(   6,    7), S(  -1,    9), S(   2,    4), S(  28,   -7), S(  49,  -15), S(  88,  -19), S(  61,  -21),
		S( -23,   13), S( -10,    7), S( -12,   13), S(  -8,    8), S(   0,   -4), S(  13,  -10), S(  29,  -10), S(  24,  -13),
		S( -31,    8), S( -33,    9), S( -25,    8), S( -20,    6), S( -16,    3), S( -17,    1), S(  13,  -10), S(  -2,  -11),
		S( -33,    4), S( -30,    1), S( -27,   -1), S( -23,    0), S( -13,   -5), S(  -5,  -13), S(  27,  -29), S(   6,  -24),
		S( -33,   -2), S( -29,    0), S( -19,   -1), S( -17,   -2), S( -10,   -9), S(  -1,  -15), S(  12,  -22), S( -18,  -13),
		S( -15,    4), S( -15,   -1), S( -12,    4), S(  -4,   -3), S(   3,   -9), S(   2,   -4), S(   7,  -11), S( -11,   -9),
	},
	{
		S( -12,  -11), S( -33,   16), S( -15,   35), S(  14,   25), S(   9,   25), S(  27,   12), S(  65,  -38), S(  27,  -11),
		S(  -7,  -21), S( -34,    6), S( -33,   39), S( -42,   60), S( -34,   74), S(   1,   29), S(  -9,   17), S(  50,    6),
		S(  -2,  -16), S( -10,   -8), S( -15,   23), S(  -6,   32), S(   6,   41), S(  50,   20), S(  63,  -14), S(  65,   -2),
		S( -16,   -3), S( -13,    4), S( -16,   12), S( -15,   28), S( -14,   44), S(   1,   34), S(  11,   35), S(  20,   20),
		S(  -9,  -11), S( -18,   10), S( -16,   10), S( -12,   23), S( -11,   24), S( -11,   23), S(   3,   16), S(  10,   19),
		S( -11,  -22), S(  -7,  -10), S( -13,    5), S( -12,    3), S( -10,    8), S(  -3,    4), S(   9,  -11), S(  10,  -15),
		S(  -4,  -26), S(  -9,  -25), S(  -2,  -27), S(   1,  -21), S(  -1,  -16), S(   7,  -40), S(  15,  -67), S(  29,  -79),
		S( -11,  -25), S(  -7,  -27), S(  -3,  -28), S(   2,  -16), S(   0,  -31), S( -12,  -28), S(   8,  -50), S(   9,  -54),
	},
	{
		S(  28,  -74), S(  59,  -43), S( 100,  -44), S(   8,  -16), S(  32,  -30), S(  45,  -14), S(  82,  -10), S( 177, -100),
		S(-108,   16), S( -20,   22), S( -16,   13), S( 106,  -17), S(  54,   -6), S(  15,   28), S(  26,   35), S( -38,   29),
		S(-140,   24), S(  21,   19), S(   2,   15), S(  11,    7), S(  48,    2), S(  80,   14), S(   5,   38), S( -72,   31),
		S( -90,   10), S( -61,   22), S( -38,   20), S( -44,   13), S( -45,    7), S( -52,   25), S( -93,   36), S(-152,   34),
		S( -85,    6), S( -59,   19), S( -66,   24), S( -62,   20), S( -68,   19), S( -70,   24), S( -94,   31), S(-151,   32),
		S( -26,    0), S(  10,   10), S( -28,   17), S( -17,   13), S( -23,   13), S( -41,   21), S( -18,   17), S( -50,   18),
		S(  77,  -18), S(  51,   -2), S(  46,   -2), S(  30,   -6), S(  21,   -1), S(  21,    4), S(  55,   -1), S(  52,   -9),
		S(  73,  -56), S( 109,  -46), S(  96,  -38), S(  25,  -33), S(  74,  -49), S(  26,  -20), S(  85,  -36), S(  77,  -56),
	},
};

constexpr PackedScore MOBILITY[4][28] = {
	{S(-135, -105), S( -35,  -52), S( -13,  -24), S(  -3,   -2), S(   5,    9), S(   8,   20), S(  16,   24), S(  25,   27), S(  35,   24)},
	{S( -38, -174), S( -53,  -89), S( -20,  -42), S( -10,  -18), S(   3,   -7), S(  10,    2), S(  17,   13), S(  24,   18), S(  28,   25), S(  33,   27), S(  37,   32), S(  51,   25), S(  62,   28), S(  77,   18)},
	{S( -43, -160), S( -42,  -93), S( -25,  -38), S( -17,  -21), S( -11,  -12), S(  -8,   -4), S(  -5,    1), S(  -2,    7), S(   2,    8), S(   8,   11), S(  12,   15), S(  16,   18), S(  21,   21), S(  27,   21), S(  28,   21)},
	{S(   0,    0), S(   0,    0), S(-394, -137), S( -18, -278), S( -49, -109), S( -19,  -88), S( -12,  -70), S(  -8,  -51), S(  -3,  -33), S(  -1,   -6), S(   3,   -0), S(   8,    6), S(  11,   15), S(  16,   15), S(  19,   19), S(  21,   27), S(  22,   31), S(  22,   40), S(  23,   46), S(  24,   50), S(  29,   55), S(  37,   46), S(  51,   47), S(  67,   37), S(  75,   40), S( 186,  -13), S( 111,   17), S( 120,    0)}
};

constexpr PackedScore THREATS[6][6] = {
	{S(  21,    1), S(  40,    3), S(  43,   34), S(  60,  -16), S(  45,  -42), S(   0,    0)},
	{S(  -6,    5), S(   0,    0), S(  22,   21), S(  46,  -13), S(  21,  -41), S(   0,    0)},
	{S(   3,   15), S(  21,   21), S(   0,    0), S(  29,    1), S(  35,   63), S(   0,    0)},
	{S(  -7,   12), S(   4,   14), S(  13,   11), S(   0,    0), S(  41,   -5), S(   0,    0)},
	{S(  -2,   10), S(   1,    7), S(  -1,   23), S(   1,   -3), S(   0,    0), S(   0,    0)},
	{S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)}
};

constexpr PackedScore PASSED_PAWN[8] = {S(   0,    0), S(  -4,    5), S( -11,   11), S( -12,   36), S(   9,   60), S(   5,  122), S(  36,  108), S(   0,    0)};
constexpr PackedScore ISOLATED_PAWN[8] = {S(  -4,   -1), S(  -6,  -15), S( -16,  -11), S( -14,  -19), S( -18,  -19), S( -14,   -8), S(  -7,  -15), S( -25,    5)};
constexpr PackedScore PAWN_STORM[3][8] = {
	{S(  23,  -33), S(  15,  -16), S(  18,   -1), S(   9,    4), S(   7,    4), S(   8,    7), S(   9,    5), S(  25,  -24)},
	{S(   0,    0), S( -41,  -29), S(  16,    8), S(  -8,   11), S(  -6,   15), S(  -3,   19), S(  -3,   19), S(   9,  -10)},
	{S( -18,    9), S( -14,   15), S(  -2,   17), S(  -1,   17), S(   3,   16), S(   5,   17), S(   4,   16), S(  -9,   -7)}
};

constexpr PackedScore BISHOP_PAIR = S(  19,   61);
constexpr PackedScore ROOK_OPEN[2] = {S(  29,    9), S(  19,    6)};

#undef S


}
