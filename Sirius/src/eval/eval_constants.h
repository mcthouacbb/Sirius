#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[6] = {S(  58,   84), S( 286,  356), S( 291,  376), S( 401,  666), S( 847, 1216), S(0, 0)};

constexpr PackedScore PSQT[6][64] = {
	{
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
		S(  37,   78), S(  45,   79), S(  29,   86), S(  65,   44), S(  49,   51), S(  35,   59), S( -23,   97), S( -28,   90),
		S(  15,   39), S(  10,   55), S(  37,   13), S(  46,  -16), S(  55,  -17), S(  85,   -8), S(  46,   37), S(  31,   28),
		S(  -9,   24), S(  -3,   26), S(   3,    2), S(   6,  -10), S(  26,  -10), S(  25,  -11), S(  10,   16), S(  12,    1),
		S( -15,    6), S( -11,   21), S(  -3,   -3), S(   6,   -9), S(   9,   -8), S(  12,  -10), S(   2,    9), S(  -1,  -11),
		S( -26,   -1), S( -19,   11), S( -12,   -5), S(  -9,   -2), S(   1,   -2), S(  -6,   -6), S(   4,    0), S(  -7,  -18),
		S( -17,    4), S( -10,   17), S(  -5,    2), S(  -5,   -2), S(   4,   10), S(  27,   -6), S(  20,    3), S(  -2,  -15),
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
	},
	{
		S(-101,  -44), S( -95,  -12), S( -74,    7), S( -31,   -6), S(   1,   -7), S( -65,  -24), S( -89,   -9), S( -70,  -63),
		S(  -1,   -2), S(  16,    2), S(  36,   -5), S(  40,   -4), S(  18,  -10), S(  62,  -20), S(  14,   -1), S(  20,  -20),
		S(   9,   -4), S(  22,   -1), S(  23,   10), S(  25,   13), S(  60,   -1), S(  61,  -14), S(  39,  -14), S(  20,  -15),
		S(   5,   10), S(   6,    8), S(  19,   17), S(  30,   17), S(  20,   23), S(  32,   15), S(  17,   11), S(  35,   -2),
		S(  -2,    7), S(   5,    4), S(   5,   22), S(  14,   19), S(   8,   29), S(  10,   15), S(   9,    8), S(   1,    7),
		S( -17,   -3), S(  -7,    2), S(  -8,    7), S(  -2,   21), S(  12,   18), S(  -6,    2), S(  12,   -3), S(  -3,    0),
		S( -16,   -2), S( -15,    5), S(  -9,    0), S(   3,    0), S(   1,   -1), S(   6,   -2), S(   6,   -6), S(   4,   11),
		S( -45,   11), S(  -9,  -11), S( -19,   -5), S(  -9,   -2), S(  -2,   -1), S(   1,  -11), S(  -8,   -4), S( -14,    8),
	},
	{
		S( -20,    4), S( -54,    9), S( -51,    5), S( -91,   12), S( -81,   13), S( -81,    1), S( -39,    3), S( -53,   -6),
		S(  -5,  -11), S(  15,   -6), S(   1,   -5), S( -15,    3), S(  10,  -10), S( -18,    0), S( -25,    4), S( -39,   -1),
		S(   5,    4), S(  19,   -3), S(  20,    2), S(  26,   -8), S(   9,    0), S(  47,    4), S(  21,    2), S(  25,    2),
		S(  -5,    1), S(   7,    5), S(  16,    2), S(  27,   18), S(  19,   10), S(  10,   11), S(   6,    1), S(  -5,    4),
		S(   4,   -2), S(  -4,    4), S(  -1,   12), S(  19,   13), S(  14,   12), S(  -3,    5), S(  -1,    4), S(  15,  -14),
		S(   4,   -4), S(  13,    3), S(   5,    4), S(   2,   10), S(   4,   12), S(   8,    4), S(  14,   -6), S(  22,  -10),
		S(  22,    4), S(   8,  -13), S(  15,  -11), S(  -6,   -2), S(   4,    1), S(  18,   -8), S(  28,  -10), S(  24,  -13),
		S(  11,   -8), S(  20,    6), S(   3,   -5), S(   0,   -6), S(  10,  -11), S(  -1,    4), S(  24,  -13), S(  35,  -25),
	},
	{
		S(  -9,   15), S( -12,   18), S( -21,   26), S( -25,   22), S( -14,   15), S(   2,   15), S(   1,   19), S(  21,   11),
		S(  -2,   17), S(   2,   25), S(  15,   27), S(  29,   16), S(  12,   17), S(  23,   12), S(  24,    8), S(  29,    4),
		S( -10,   17), S(  19,   14), S(  12,   17), S(  12,   13), S(  34,    5), S(  38,   -1), S(  55,   -2), S(  22,   -4),
		S( -12,   17), S(   3,   12), S(   4,   17), S(   6,   12), S(  11,    1), S(  11,    0), S(   7,    5), S(   5,    0),
		S( -19,    5), S( -17,    6), S(  -8,    4), S(  -2,    1), S(  -3,    0), S( -17,    3), S(   2,   -5), S( -14,   -4),
		S( -22,   -3), S( -16,   -7), S( -14,   -9), S( -13,   -7), S(  -2,  -12), S(  -7,  -14), S(  15,  -27), S(   0,  -25),
		S( -22,  -12), S( -18,  -11), S(  -9,  -12), S(  -8,  -13), S(  -4,  -19), S(   2,  -24), S(   8,  -27), S( -18,  -22),
		S( -13,  -11), S( -12,  -15), S( -12,   -8), S(  -4,  -16), S(   1,  -22), S(  -3,  -18), S(  -3,  -20), S( -15,  -19),
	},
	{
		S( -24,  -10), S( -35,    0), S( -29,   26), S(   0,   14), S(  -5,   17), S(   1,   12), S(  43,  -37), S(  -6,   -3),
		S(   5,  -14), S( -10,    2), S(  -9,   33), S( -22,   53), S( -25,   68), S(   5,   34), S(   6,   10), S(  38,    9),
		S(   7,   -4), S(   4,    5), S(  -2,   32), S(   2,   35), S( -10,   52), S(  13,   22), S(  28,    4), S(  29,   -1),
		S(  -2,    5), S(  -5,   22), S(   0,   22), S(  -9,   39), S( -18,   43), S(   3,   25), S(   2,   35), S(  12,   12),
		S(   0,   -2), S(  -4,   17), S(  -6,   19), S(  -8,   30), S(  -2,   30), S(  -5,   24), S(   8,    6), S(  16,   -3),
		S(   3,  -25), S(   2,   -7), S( -10,    8), S(  -9,   15), S(  -5,   20), S(   0,    5), S(  14,  -18), S(  17,  -31),
		S(   6,  -40), S(   0,  -39), S(   4,  -28), S(   4,  -15), S(   3,  -14), S(  10,  -40), S(  18,  -72), S(  32,  -91),
		S( -12,  -39), S( -13,  -32), S( -10,  -25), S(  -7,  -26), S(  -7,  -27), S( -17,  -36), S(  -5,  -52), S(  10,  -58),
	},
	{
		S(  48,  -54), S(  82,  -29), S( 118,  -33), S(  49,  -10), S(  62,  -34), S( -18,    2), S(  19,    8), S(  94,  -68),
		S( -95,   28), S(   7,   29), S(  25,   14), S( 145,  -16), S(  89,  -10), S(  44,   27), S(  10,   46), S( -88,   48),
		S(-110,   27), S(  35,   19), S(  31,   10), S(  43,    4), S(  84,    1), S(  99,   13), S(  -7,   43), S( -70,   32),
		S( -67,    2), S( -25,    9), S( -16,    8), S( -16,    2), S( -21,   -2), S( -31,   16), S( -66,   26), S(-154,   29),
		S( -68,  -11), S( -34,    0), S( -32,    4), S( -32,    2), S( -37,    2), S( -39,    6), S( -73,   14), S(-151,   18),
		S( -46,   -6), S(   9,   -3), S( -20,    3), S(  -3,    0), S(  -5,   -1), S( -23,    6), S( -13,    4), S( -70,    9),
		S(  37,  -16), S(  26,   -2), S(  24,   -2), S(   6,   -4), S(   1,   -1), S(  12,    0), S(  27,   -2), S(  22,  -12),
		S(  24,  -33), S(  56,  -24), S(  28,  -10), S( -27,   -2), S(  10,  -19), S( -20,    3), S(  35,  -15), S(  33,  -39),
	},
};

constexpr PackedScore MOBILITY[4][28] = {
	{S( -11,  -23), S( -34,  -44), S( -11,  -15), S(  -1,    7), S(  10,   16), S(  13,   26), S(  24,   28), S(  34,   30), S(  46,   25), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S(   2,  -29), S( -31,  -69), S( -10,  -25), S(  -1,   -2), S(  11,    6), S(  18,   13), S(  24,   22), S(  29,   27), S(  31,   31), S(  34,   32), S(  33,   34), S(  42,   27), S(  34,   32), S(  48,   20), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -59,   22), S(   2,  -16), S( -23,  -27), S( -13,  -15), S(  -8,  -10), S(  -2,    5), S(  -0,   12), S(  -3,   18), S(   1,   18), S(   5,   22), S(  10,   25), S(  11,   30), S(  13,   32), S(  20,   31), S(  26,   25), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -49,   90), S( -75,    0), S(-121,   13), S( -78, -231), S( -70,  -74), S( -30,  -16), S( -19,    6), S( -11,   11), S(  -3,   19), S(   0,   39), S(   3,   45), S(   7,   52), S(  11,   57), S(  14,   58), S(  18,   60), S(  20,   63), S(  23,   63), S(  23,   66), S(  23,   69), S(  24,   69), S(  31,   63), S(  40,   48), S(  44,   47), S(  68,   19), S(  73,   19), S( 114,  -16), S( 113,  -19), S(  77,  -23)}
};

constexpr PackedScore THREAT_BY_PAWN[6] = {S(   0,    0), S(  54,   25), S(  60,   45), S(  83,    4), S(  68,  -32), S(   0,    0)};

constexpr PackedScore PASSED_PAWN[8] = {S(   0,    0), S( -17,  -67), S( -15,  -52), S( -13,  -18), S(  12,   18), S(   1,   86), S(  51,   93), S(   0,    0)};
constexpr PackedScore ISOLATED_PAWN[8] = {S(  -4,    6), S(  -4,  -11), S( -11,   -6), S(  -7,  -13), S( -12,  -13), S(  -7,   -4), S(  -2,  -11), S( -12,    8)};
constexpr PackedScore PAWN_PHALANX[8] = {S(   0,    0), S(   4,   -1), S(  12,    7), S(  22,   18), S(  50,   59), S( 139,  184), S(-131,  429), S(   0,    0)};
constexpr PackedScore DEFENDED_PAWN[8] = {S(   0,    0), S(   0,    0), S(  19,   11), S(  12,    8), S(  14,   16), S(  30,   41), S( 170,   30), S(   0,    0)};
constexpr PackedScore OUR_PASSER_PROXIMITY[8] = {S(   0,    0), S(   6,   53), S(  -5,   39), S(  -4,   23), S(  -1,   12), S(   2,   10), S(  17,    7), S(   6,    6)};
constexpr PackedScore THEIR_PASSER_PROXIMITY[8] = {S(   0,    0), S( -74,   -6), S(   5,    1), S(  -1,   26), S(   5,   36), S(   5,   44), S(   8,   49), S( -11,   49)};

constexpr PackedScore PAWN_STORM[3][8] = {
	{S(  46,  -35), S(  24,  -17), S(  18,   -3), S(   9,   -0), S(   2,    2), S(  -2,    6), S(  -0,    5), S(   8,  -11)},
	{S(   0,    0), S(  11,  -29), S(  28,    2), S(   3,    1), S(  -5,    8), S(  -7,   12), S(  -8,   14), S(   7,   -2)},
	{S(  -1,   -1), S(  -8,    6), S(   3,    9), S(   2,    9), S(   4,    8), S(   4,    9), S(   4,    9), S(  -8,   -4)}
};
constexpr PackedScore PAWN_SHIELD[3][8] = {
	{S(   2,  -13), S(  -9,   -7), S(  -5,  -11), S(  -1,  -10), S(  13,  -14), S(  17,  -26), S(  31,  -29), S(   7,    0)},
	{S(   0,    0), S( -16,    3), S(  -9,   -4), S(   9,   -4), S(  21,  -11), S(  35,  -31), S(  51,  -39), S(  17,    2)},
	{S(  -2,   -8), S(  -2,   -5), S(   0,   -5), S(   1,    0), S(   4,    2), S(   6,    2), S(  23,    6), S(  -8,    7)}
};
constexpr PackedScore SAFE_KNIGHT_CHECK = S(  83,   -5);
constexpr PackedScore SAFE_BISHOP_CHECK = S(  16,   -6);
constexpr PackedScore SAFE_ROOK_CHECK = S(  57,   -3);
constexpr PackedScore SAFE_QUEEN_CHECK = S(  33,   11);
constexpr PackedScore KING_ATTACKER_WEIGHT[4] = {S(  15,   -2), S(  11,    4), S(   9,  -14), S(  -1,   18)};
constexpr PackedScore KING_ATTACKS[14] = {S( -21,   11), S( -24,    5), S( -28,    4), S( -28,    7), S( -21,    4), S(  -6,   -2), S(  15,   -9), S(  43,  -22), S(  89,  -45), S( 118,  -49), S( 155,  -64), S( 179,  -55), S( 216, -138), S( 171,    7)};

constexpr PackedScore KNIGHT_OUTPOST = S(  33,   19);
constexpr PackedScore BISHOP_PAIR = S(  23,   65);
constexpr PackedScore ROOK_OPEN[2] = {S(  26,    8), S(   7,   22)};

constexpr PackedScore TEMPO = S(  23,   23);

#undef S


}
