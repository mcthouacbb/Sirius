#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[6] = {S(  63,  101), S( 272,  340), S( 279,  352), S( 371,  627), S( 797, 1190), S(0, 0)};

constexpr PackedScore PSQT[6][64] = {
	{
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
		S(  34,  105), S(  28,   96), S(  18,   97), S(  54,   44), S(  25,   45), S(  15,   51), S( -70,   98), S( -49,  110),
		S(  10,   43), S(  -3,   49), S(  23,   10), S(  30,  -26), S(  36,  -29), S(  66,  -15), S(  37,   25), S(  27,   26),
		S( -12,   28), S( -15,   20), S(  -4,    5), S(  -7,   -9), S(  10,   -8), S(  18,  -12), S(  -2,    8), S(  11,    4),
		S( -15,    9), S( -19,    9), S(  -5,   -3), S(   6,   -7), S(   6,   -5), S(  11,  -10), S(  -9,    0), S(   3,   -7),
		S( -17,    5), S( -14,    3), S(  -7,   -3), S(  -3,   -1), S(  12,    1), S(   6,   -5), S(  15,   -7), S(   8,   -9),
		S( -12,    7), S( -11,    5), S(  -4,    0), S(  -4,    0), S(   8,    8), S(  28,   -5), S(  26,   -9), S(   5,  -11),
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)
	},
	{
		S(-103,  -32), S(-107,   -4), S( -55,    3), S( -19,   -7), S(   9,   -4), S( -34,  -26), S( -82,   -3), S( -62,  -50),
		S( -18,   -2), S( -12,    6), S(   2,    3), S(  22,    0), S(  23,   -9), S(  58,  -20), S(   1,   -1), S(  22,  -17),
		S(  -4,   -4), S(  12,    0), S(  25,    9), S(  40,    9), S(  58,   -1), S(  87,  -17), S(  35,   -9), S(  41,  -17),
		S(   5,    9), S(  14,    8), S(  29,   15), S(  54,   18), S(  45,   13), S(  55,   11), S(  31,    6), S(  43,   -1),
		S(  -5,   14), S(   3,    3), S(  12,   17), S(  24,   19), S(  25,   23), S(  25,    9), S(  27,    2), S(   8,   10),
		S( -21,    0), S( -10,   -1), S(  -3,    2), S(  -1,   16), S(  12,   14), S(   1,   -4), S(  11,   -4), S(  -5,    1),
		S( -26,    3), S( -23,    5), S( -15,   -3), S(   2,    0), S(   0,   -1), S(  -1,   -4), S(  -3,   -3), S(  -6,   15),
		S( -63,   15), S( -14,   -5), S( -33,   -3), S( -20,   -2), S( -15,    2), S(  -9,   -8), S( -12,    1), S( -34,   10)
	},
	{
		S( -15,    5), S( -48,   11), S( -39,    3), S( -78,   13), S( -62,    7), S( -49,   -3), S( -28,    3), S( -45,   -1),
		S( -11,   -7), S( -18,   -2), S( -17,   -2), S( -20,   -2), S(  -7,  -10), S(  -3,   -9), S( -19,   -2), S(   8,  -11),
		S(   2,   10), S(  11,   -2), S(   2,    0), S(  13,   -9), S(  11,   -5), S(  47,   -4), S(  34,   -5), S(  32,    6),
		S( -11,    8), S(  -2,    9), S(   5,    0), S(  19,    9), S(  11,    1), S(  14,    4), S(  -3,    8), S(  -3,    6),
		S(  -5,    4), S( -11,    7), S(   0,    5), S(  11,    4), S(  12,    1), S(  -2,    1), S(  -5,    6), S(   8,   -4),
		S(   2,    5), S(  11,    3), S(   5,    2), S(   9,    4), S(  10,    8), S(   8,    2), S(  11,   -3), S(  18,    0),
		S(  25,   10), S(   8,   -9), S(  19,  -11), S(   2,    0), S(   9,    2), S(  17,   -7), S(  27,   -3), S(  22,   -4),
		S(  11,   -1), S(  27,    5), S(  11,   -1), S(  -3,    3), S(   2,    0), S(   2,   10), S(  21,   -9), S(  27,  -11)
	},
	{
		S(  -2,   16), S( -13,   22), S( -14,   29), S( -16,   25), S(   3,   19), S(  27,   13), S(  24,   15), S(  41,    8),
		S( -13,   13), S( -11,   20), S(   1,   22), S(  17,   11), S(   9,   11), S(  31,    5), S(  38,    1), S(  59,   -8),
		S( -21,   11), S(   6,    7), S(  -1,    9), S(   2,    5), S(  29,   -5), S(  48,  -14), S(  90,  -18), S(  64,  -20),
		S( -21,   13), S(  -8,    8), S( -12,   14), S(  -8,    9), S(   0,   -4), S(  12,   -9), S(  31,  -10), S(  25,  -12),
		S( -30,    8), S( -32,   10), S( -26,    8), S( -20,    6), S( -16,    3), S( -18,    1), S(  12,   -9), S(  -2,  -10),
		S( -33,    4), S( -30,    1), S( -27,   -2), S( -23,    0), S( -13,   -6), S(  -5,  -14), S(  27,  -29), S(   5,  -24),
		S( -32,   -2), S( -29,    0), S( -19,   -1), S( -17,   -3), S( -10,  -10), S(  -2,  -15), S(  12,  -22), S( -16,  -14),
		S( -15,    2), S( -14,   -1), S( -11,    3), S(  -4,   -3), S(   4,  -10), S(   2,   -4), S(  10,  -13), S(  -9,  -12)
	},
	{
		S( -11,  -11), S( -33,   16), S( -15,   35), S(  14,   24), S(  11,   23), S(  28,   14), S(  67,  -36), S(  27,   -7),
		S(  -5,  -21), S( -33,    7), S( -32,   39), S( -42,   60), S( -33,   74), S(   2,   32), S(  -9,   24), S(  51,   11),
		S(   0,  -15), S(  -8,   -8), S( -15,   24), S(  -5,   33), S(   6,   43), S(  50,   23), S(  61,   -9), S(  64,    2),
		S( -15,   -2), S( -12,    4), S( -16,   13), S( -14,   28), S( -15,   45), S(   0,   36), S(  11,   37), S(  19,   23),
		S(  -8,  -11), S( -18,   10), S( -17,   11), S( -12,   24), S( -11,   24), S( -11,   23), S(   2,   16), S(  10,   19),
		S( -11,  -23), S(  -7,  -10), S( -13,    4), S( -12,    3), S( -10,    8), S(  -3,    3), S(   9,  -11), S(  11,  -17),
		S(  -4,  -27), S(  -9,  -26), S(  -1,  -28), S(   1,  -22), S(  -1,  -17), S(   7,  -41), S(  16,  -67), S(  31,  -81),
		S( -12,  -26), S(  -7,  -28), S(  -3,  -29), S(   2,  -16), S(   0,  -32), S( -12,  -30), S(   8,  -49), S(  10,  -57)
	},
	{
		S(  71, -107), S(  64,  -57), S(  78,  -42), S( -47,    3), S(  -9,  -10), S(  46,  -12), S(  99,  -22), S( 220, -132),
		S( -62,  -11), S(  -6,   16), S( -41,   28), S(  56,   13), S(  10,   30), S(   6,   44), S(  48,   30), S(  24,    0),
		S( -71,    1), S(  37,   21), S( -26,   39), S( -46,   50), S( -11,   51), S(  65,   42), S(  42,   40), S(   2,   10),
		S( -37,   -9), S( -48,   25), S( -67,   45), S(-111,   58), S(-104,   59), S( -63,   53), S( -56,   40), S( -84,   15),
		S( -44,  -18), S( -45,   13), S( -76,   37), S(-108,   53), S(-105,   52), S( -67,   38), S( -70,   26), S(-101,   10),
		S(   3,  -29), S(  20,   -4), S( -38,   19), S( -54,   31), S( -48,   31), S( -44,   22), S(  -2,    3), S( -20,   -9),
		S(  88,  -46), S(  47,  -18), S(  31,   -7), S(  -3,    4), S(  -8,    8), S(  12,   -1), S(  58,  -19), S(  65,  -37),
		S(  78,  -83), S( 104,  -63), S(  80,  -44), S( -11,  -25), S(  46,  -43), S(  12,  -27), S(  82,  -54), S(  81,  -84)
	}
};

constexpr PackedScore MOBILITY[4][28] = {
	{S(-134, -108), S( -35,  -51), S( -12,  -23), S(  -3,   -1), S(   6,   10), S(   8,   21), S(  16,   25), S(  26,   28), S(  35,   26)},
	{S( -34, -180), S( -54,  -92), S( -21,  -44), S( -11,  -20), S(   2,   -8), S(   9,    1), S(  16,   13), S(  23,   18), S(  27,   25), S(  32,   28), S(  36,   32), S(  50,   26), S(  62,   29), S(  76,   19)},
	{S( -62, -144), S( -41,  -87), S( -21,  -39), S( -13,  -22), S(  -7,  -13), S(  -4,   -6), S(  -1,   -0), S(   2,    6), S(   6,    7), S(  12,   10), S(  16,   14), S(  20,   18), S(  26,   21), S(  32,   21), S(  33,   22)},
	{S(   0,    0), S(   0,    0), S(-272,  -84), S( -17, -283), S( -46, -112), S( -15,  -94), S(  -8,  -77), S(  -3,  -57), S(   1,  -39), S(   3,  -12), S(   7,   -6), S(  12,    1), S(  15,   10), S(  20,   11), S(  22,   15), S(  24,   24), S(  25,   27), S(  25,   37), S(  26,   42), S(  27,   47), S(  33,   51), S(  41,   44), S(  55,   45), S(  70,   35), S(  81,   37), S( 194,  -17), S( 123,   11), S(  95,   16)}
};

constexpr PackedScore THREATS[6][6] = {
	{S(  21,   -2), S(  39,    3), S(  43,   35), S(  60,  -16), S(  44,  -41), S(   0,    0)},
	{S(  -6,    5), S(   0,    0), S(  22,   21), S(  46,  -13), S(  22,  -41), S(   0,    0)},
	{S(   3,   15), S(  21,   22), S(   0,    0), S(  28,    2), S(  36,   62), S(   0,    0)},
	{S(  -7,   11), S(   4,   15), S(  13,   10), S(   0,    0), S(  42,   -6), S(   0,    0)},
	{S(  -2,    8), S(   1,    7), S(  -1,   23), S(   1,   -2), S(   0,    0), S(   0,    0)},
	{S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)}
};

constexpr PackedScore PASSED_PAWN[8] = {S(   0,    0), S(  -5,   13), S(  -9,   17), S(  -9,   40), S(  11,   62), S(   3,  125), S(  20,  108), S(   0,    0)};
constexpr PackedScore ISOLATED_PAWN[8] = {S( -10,  -10), S(  -7,  -15), S( -18,  -16), S( -17,  -21), S( -20,  -24), S( -16,  -13), S(  -9,  -15), S( -21,  -10)};
constexpr PackedScore BISHOP_PAIR = S(  19,   60);
constexpr PackedScore ROOK_OPEN[2] = {S(  29,    7), S(  17,    2)};

#undef S


}
