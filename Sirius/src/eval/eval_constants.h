#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[7] = {
    S(0, 0), S(62, 120), S(273, 338), S(282, 350), S(361, 621), S(789, 1185), S(0, 0)
};

constexpr PackedScore PSQT[7][64] = {
    {},
    {
        S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
        S(  55,  169), S(  73,  161), S(  47,  163), S(  78,  113), S(  59,  109), S(  45,  122), S( -21,  165), S( -36,  178),
        S(  -5,  106), S(  -6,  117), S(  20,   85), S(  28,   64), S(  31,   54), S(  54,   39), S(  37,   85), S(   5,   81),
        S( -19,   36), S(  -7,   27), S(  -6,    8), S(  -5,    1), S(  13,   -8), S(  14,   -8), S(  10,   12), S(   1,   11),
        S( -23,   10), S( -11,   10), S(  -8,   -9), S(   3,  -11), S(   6,  -13), S(   6,  -14), S(   5,    0), S(  -7,   -8),
        S( -24,    5), S(  -7,    6), S( -10,   -9), S(  -4,    1), S(  12,   -7), S(   0,   -9), S(  26,   -3), S(  -1,  -11),
        S( -18,    7), S(  -3,   10), S(  -6,   -5), S(  -4,    3), S(   8,    5), S(  26,   -6), S(  38,   -4), S(  -3,  -13),
        S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
    },
    {
        S( -96,  -36), S(-106,   -4), S( -56,    2), S( -20,   -6), S(  10,   -3), S( -36,  -27), S( -80,    1), S( -54,  -56),
        S(  -4,   -9), S(   2,    3), S(  24,   -2), S(  36,   -2), S(  26,   -9), S(  77,  -24), S(  10,   -3), S(  37,  -24),
        S(  -1,   -4), S(  20,    0), S(  24,   14), S(  38,   14), S(  68,    1), S(  77,   -6), S(  44,  -11), S(  34,  -14),
        S(   4,    8), S(   6,   13), S(  19,   22), S(  45,   23), S(  30,   23), S(  44,   20), S(  19,   13), S(  41,    0),
        S(  -5,   13), S(  -3,    5), S(   2,   24), S(  13,   23), S(  16,   27), S(  16,   17), S(  20,    7), S(   8,    9),
        S( -23,   -1), S( -15,    0), S( -12,    5), S( -10,   19), S(   4,   18), S(  -9,    2), S(   6,   -2), S(  -7,    0),
        S( -24,   -3), S( -21,    2), S( -16,   -4), S(   0,    0), S(  -2,   -1), S(  -2,   -5), S(  -5,   -5), S(  -5,   11),
        S( -61,    8), S( -11,   -9), S( -32,   -7), S( -19,   -3), S( -14,    1), S( -10,   -9), S( -10,   -3), S( -30,   -3),
    },
    {
        S( -16,    0), S( -52,    7), S( -41,    4), S( -84,   15), S( -67,    9), S( -52,   -2), S( -32,   -3), S( -41,   -6),
        S( -11,  -14), S(  -1,   -6), S( -11,   -3), S( -19,    0), S(   4,  -10), S(  -2,   -8), S(  -2,   -2), S(   4,  -15),
        S(  -5,    8), S(   9,   -2), S(   7,    4), S(  20,   -7), S(  11,   -1), S(  47,   -1), S(  27,   -3), S(  25,    3),
        S( -11,    3), S(   2,    8), S(  10,    3), S(  25,   16), S(  20,    7), S(  15,    9), S(   6,    3), S(  -7,    5),
        S(  -3,   -3), S( -11,    7), S(  -2,   12), S(  17,    9), S(  15,   10), S(  -3,    6), S(  -7,    6), S(  14,  -12),
        S(   4,    1), S(   8,    4), S(   3,    6), S(   6,    8), S(   7,   11), S(   4,    7), S(   7,   -4), S(  20,   -5),
        S(  24,    6), S(   6,   -7), S(  16,  -11), S(  -3,    0), S(   3,    2), S(  15,   -7), S(  23,   -1), S(  21,   -9),
        S(  10,   -4), S(  24,    2), S(   7,   -8), S(  -8,   -3), S(  -2,   -5), S(  -2,    5), S(  20,  -13), S(  25,  -15),
    },
    {
        S(   6,   13), S(  -5,   19), S(  -8,   27), S(  -6,   22), S(  13,   15), S(  37,    9), S(  37,    8), S(  48,    5),
        S( -13,   15), S( -11,   24), S(   2,   27), S(  18,   16), S(   7,   17), S(  35,    8), S(  36,    4), S(  59,   -8),
        S( -24,   14), S(   4,   14), S(  -1,   15), S(   1,   12), S(  27,    1), S(  42,   -5), S(  83,  -12), S(  59,  -17),
        S( -24,   14), S(  -9,   10), S( -14,   18), S(  -9,   13), S(  -1,    0), S(   9,   -4), S(  26,   -7), S(  22,  -11),
        S( -30,    4), S( -34,    8), S( -27,    8), S( -20,    5), S( -18,    3), S( -21,    2), S(   8,   -9), S(  -2,  -13),
        S( -33,    0), S( -30,   -2), S( -27,   -4), S( -24,   -3), S( -15,   -8), S(  -8,  -15), S(  24,  -30), S(   4,  -28),
        S( -31,   -7), S( -27,   -5), S( -18,   -5), S( -16,   -6), S(  -9,  -13), S(  -2,  -18), S(  11,  -24), S( -14,  -19),
        S( -14,   -2), S( -13,   -5), S( -10,    0), S(  -3,   -6), S(   4,  -13), S(   2,   -8), S(   9,  -17), S(  -8,  -16),
    },
    {
        S(  -8,  -15), S( -35,   16), S( -15,   36), S(  12,   24), S(  17,   20), S(  22,   18), S(  63,  -37), S(  25,  -11),
        S(  -3,  -25), S( -30,   10), S( -31,   45), S( -39,   63), S( -34,   81), S(   3,   40), S(  -6,   22), S(  50,    7),
        S(   0,  -16), S( -10,   -3), S( -14,   33), S(  -6,   43), S(   5,   52), S(  50,   31), S(  56,   -1), S(  62,   -2),
        S( -14,   -8), S( -13,    6), S( -18,   20), S( -17,   38), S( -17,   54), S(  -1,   42), S(  10,   36), S(  18,   22),
        S(  -8,  -14), S( -19,   10), S( -19,   15), S( -13,   30), S( -14,   29), S( -13,   26), S(   0,   17), S(  11,   11),
        S( -10,  -24), S(  -8,  -11), S( -15,    4), S( -14,    2), S( -11,    6), S(  -5,    2), S(   7,  -12), S(  11,  -22),
        S(   0,  -34), S(  -8,  -31), S(  -1,  -32), S(   2,  -28), S(   0,  -23), S(   8,  -45), S(  16,  -68), S(  35,  -88),
        S(  -7,  -37), S(  -5,  -35), S(  -1,  -37), S(   5,  -26), S(   2,  -40), S( -10,  -36), S(  12,  -58), S(  13,  -66),
    },
    {
        S(  69, -103), S(  52,  -54), S(  86,  -46), S( -56,    3), S(  -1,  -15), S(  43,  -13), S(  88,  -21), S( 202, -128),
        S( -55,  -11), S(  -2,   16), S( -45,   28), S(  60,   11), S(   8,   31), S(  10,   43), S(  39,   34), S(  18,    3),
        S( -71,    4), S(  33,   22), S( -29,   41), S( -49,   51), S( -12,   51), S(  60,   43), S(  36,   42), S(   1,   13),
        S( -40,   -6), S( -49,   27), S( -66,   46), S(-109,   58), S( -99,   58), S( -63,   52), S( -60,   43), S( -88,   19),
        S( -31,  -19), S( -43,   13), S( -71,   36), S(-102,   50), S(-101,   50), S( -64,   37), S( -67,   26), S( -93,   10),
        S(   5,  -28), S(  23,   -5), S( -34,   16), S( -49,   28), S( -42,   27), S( -40,   19), S(   4,    0), S( -14,  -11),
        S(  90,  -48), S(  49,  -21), S(  36,   -9), S(   2,    2), S(  -2,    5), S(  17,   -4), S(  63,  -22), S(  69,  -39),
        S(  79,  -82), S( 107,  -64), S(  83,  -45), S(  -7,  -27), S(  50,  -45), S(  16,  -29), S(  86,  -55), S(  84,  -84),
    },
};

constexpr PackedScore MOBILITY[4][28] = {
    {S(-145,  -94), S( -42,  -55), S( -19,  -29), S( -10,   -8), S(   1,   -0), S(   3,   10), S(  14,   13), S(  24,   13), S(  35,    9)},
    {S( -47, -138), S( -63,  -83), S( -27,  -44), S( -15,  -20), S(  -3,  -11), S(   6,   -4), S(  13,    5), S(  20,    9), S(  23,   15), S(  27,   14), S(  30,   16), S(  42,    9), S(  53,    7), S(  59,   -2)},
    {S( -56, -154), S( -41,  -81), S( -16,  -40), S(  -7,  -26), S(  -1,  -18), S(   2,  -11), S(   5,   -5), S(   8,    0), S(  12,    1), S(  18,    4), S(  22,    7), S(  25,   10), S(  29,   11), S(  33,    9), S(  30,   10)},
    {S(   0,    0), S(   0,    0), S(-230,  -66), S( -32, -275), S( -50, -116), S( -21,  -93), S( -12,  -81), S(  -7,  -67), S(  -2,  -50), S(   1,  -25), S(   5,  -20), S(  10,  -14), S(  15,   -7), S(  20,   -7), S(  22,   -3), S(  24,    4), S(  25,    8), S(  25,   16), S(  25,   21), S(  26,   22), S(  33,   24), S(  39,   17), S(  53,   14), S(  66,    4), S(  79,    2), S( 186,  -48), S( 115,  -22), S(  82,  -12)}
};

constexpr PackedScore BISHOP_PAIR = S(20, 64);

constexpr PackedScore ROOK_OPEN = S(31, 8);
constexpr PackedScore ROOK_SEMI_OPEN = S(12, 9);

#undef S


}
