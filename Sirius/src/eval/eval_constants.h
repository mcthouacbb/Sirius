#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[6] = {S(  58,   82), S( 273,  341), S( 279,  353), S( 375,  626), S( 800, 1188), S(0, 0)};

constexpr PackedScore PSQT[6][64] = {
	{
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
		S(  34,  109), S(  39,  110), S(  22,  108), S(  58,   58), S(  32,   59), S(  24,   67), S( -56,  118), S( -22,  112),
		S(   4,   43), S(   0,   59), S(  24,   16), S(  28,  -18), S(  35,  -21), S(  69,   -7), S(  39,   41), S(  34,   26),
		S( -16,   24), S( -11,   29), S(  -4,    7), S(  -7,   -6), S(  12,   -6), S(  22,   -7), S(   8,   21), S(  24,   -1),
		S( -22,    4), S( -18,   17), S(  -9,   -2), S(  -1,   -5), S(   3,   -5), S(  11,   -8), S(   0,   10), S(  18,  -15),
		S( -26,   -1), S( -15,    9), S( -13,   -2), S( -12,    1), S(   6,    1), S(   4,   -4), S(  20,    1), S(  22,  -20),
		S( -21,    0), S( -12,   11), S( -10,    0), S( -13,    1), S(   4,    7), S(  26,   -6), S(  32,   -2), S(  20,  -23),
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
	},
	{
		S(-105,  -33), S(-105,   -6), S( -57,    4), S( -20,   -8), S(  10,   -4), S( -34,  -26), S( -83,   -4), S( -64,  -53),
		S( -19,   -2), S( -12,    7), S(   1,    1), S(  22,   -1), S(  22,   -9), S(  56,  -22), S(   2,   -3), S(  22,  -20),
		S(  -6,   -4), S(  10,    0), S(  24,    9), S(  39,    9), S(  57,   -2), S(  85,  -18), S(  34,   -9), S(  41,  -17),
		S(   4,   10), S(  13,    8), S(  28,   15), S(  53,   18), S(  44,   12), S(  55,   11), S(  30,    5), S(  43,   -2),
		S(  -6,   14), S(   3,    4), S(  12,   17), S(  23,   19), S(  24,   23), S(  24,    9), S(  27,    2), S(   8,   10),
		S( -22,    0), S( -11,    0), S(  -4,    1), S(  -2,   16), S(  12,   14), S(   1,   -4), S(  10,   -3), S(  -6,    2),
		S( -26,    4), S( -23,    5), S( -15,   -2), S(   1,    1), S(  -1,   -1), S(  -2,   -4), S(  -4,   -3), S(  -6,   16),
		S( -62,   15), S( -15,   -6), S( -33,   -2), S( -21,   -2), S( -16,    3), S( -10,   -7), S( -14,    1), S( -34,   11),
	},
	{
		S( -16,    5), S( -48,   10), S( -39,    2), S( -76,   11), S( -61,    6), S( -46,   -5), S( -28,   -1), S( -45,   -4),
		S( -11,   -8), S( -18,   -3), S( -17,   -3), S( -19,   -3), S(  -7,  -10), S(  -3,  -11), S( -17,   -3), S(   9,  -12),
		S(   1,    9), S(  10,   -2), S(   2,    0), S(  13,   -8), S(  11,   -5), S(  47,   -4), S(  35,   -6), S(  33,    4),
		S( -12,    6), S(  -3,    9), S(   4,    1), S(  19,    9), S(  11,    1), S(  13,    5), S(  -3,    8), S(  -1,    4),
		S(  -5,    4), S( -11,    8), S(   0,    6), S(  11,    4), S(  12,    2), S(  -2,    2), S(  -5,    5), S(   8,   -4),
		S(   2,    5), S(  11,    3), S(   5,    3), S(   9,    5), S(  10,    9), S(   8,    2), S(  11,   -3), S(  18,   -1),
		S(  25,    9), S(   8,   -9), S(  19,  -11), S(   1,    0), S(   9,    2), S(  17,   -7), S(  27,   -5), S(  22,   -5),
		S(  12,   -2), S(  27,    5), S(  10,   -1), S(  -3,    3), S(   2,   -1), S(   2,   10), S(  20,   -9), S(  29,  -14),
	},
	{
		S(  -7,   19), S( -12,   22), S( -12,   29), S( -15,   25), S(   4,   17), S(  29,   11), S(  20,   16), S(  38,    9),
		S( -15,   14), S( -10,   20), S(   2,   22), S(  19,   10), S(  10,   10), S(  33,    4), S(  38,    1), S(  56,   -7),
		S( -23,   11), S(   6,    7), S(  -1,    8), S(   2,    3), S(  28,   -7), S(  49,  -15), S(  88,  -19), S(  61,  -21),
		S( -23,   13), S( -10,    7), S( -12,   13), S(  -8,    8), S(   0,   -4), S(  14,  -10), S(  29,  -10), S(  24,  -13),
		S( -31,    8), S( -33,    9), S( -25,    8), S( -20,    6), S( -16,    3), S( -17,    0), S(  13,  -10), S(  -2,  -11),
		S( -33,    4), S( -30,    1), S( -26,   -1), S( -23,    0), S( -13,   -6), S(  -5,  -14), S(  27,  -30), S(   6,  -25),
		S( -33,   -2), S( -29,    0), S( -19,   -1), S( -17,   -3), S( -10,  -10), S(  -1,  -15), S(  11,  -22), S( -18,  -13),
		S( -15,    3), S( -15,   -1), S( -11,    4), S(  -4,   -3), S(   3,  -10), S(   2,   -4), S(   7,  -11), S( -11,   -9),
	},
	{
		S( -11,  -11), S( -33,   16), S( -15,   35), S(  14,   25), S(   9,   25), S(  27,   13), S(  65,  -38), S(  27,  -10),
		S(  -6,  -21), S( -33,    6), S( -32,   38), S( -41,   60), S( -33,   74), S(   2,   29), S(  -8,   17), S(  50,    6),
		S(  -1,  -16), S(  -9,   -9), S( -14,   23), S(  -6,   32), S(   6,   41), S(  51,   20), S(  64,  -14), S(  66,   -2),
		S( -15,   -3), S( -12,    4), S( -16,   12), S( -15,   28), S( -13,   44), S(   1,   34), S(  12,   35), S(  21,   20),
		S(  -8,  -11), S( -17,   10), S( -16,   10), S( -11,   23), S( -11,   24), S( -10,   22), S(   3,   16), S(  11,   18),
		S( -10,  -22), S(  -7,  -10), S( -13,    5), S( -12,    3), S(  -9,    8), S(  -3,    4), S(  10,  -12), S(  11,  -15),
		S(  -3,  -26), S(  -9,  -25), S(  -1,  -28), S(   1,  -21), S(   0,  -16), S(   8,  -40), S(  16,  -67), S(  30,  -79),
		S( -11,  -25), S(  -7,  -27), S(  -3,  -28), S(   3,  -16), S(   1,  -31), S( -12,  -28), S(   8,  -50), S(  10,  -54),
	},
	{
		S(  28,  -73), S(  58,  -43), S(  98,  -44), S(   5,  -16), S(  31,  -30), S(  45,  -15), S(  82,   -9), S( 176,  -99),
		S(-108,   16), S( -21,   22), S( -16,   13), S( 104,  -17), S(  52,   -6), S(  15,   28), S(  24,   36), S( -37,   30),
		S(-138,   25), S(  22,   19), S(   3,   14), S(  10,    7), S(  47,    2), S(  80,   14), S(   6,   39), S( -70,   32),
		S( -92,   11), S( -61,   23), S( -39,   21), S( -46,   14), S( -48,    8), S( -52,   27), S( -91,   37), S(-151,   36),
		S( -88,    7), S( -61,   20), S( -68,   25), S( -66,   21), S( -71,   20), S( -72,   25), S( -97,   33), S(-152,   34),
		S( -28,    1), S(   8,   11), S( -31,   18), S( -20,   13), S( -25,   14), S( -44,   22), S( -20,   18), S( -52,   20),
		S(  76,  -17), S(  50,   -1), S(  45,   -2), S(  29,   -6), S(  20,   -1), S(  20,    4), S(  54,   -1), S(  52,   -7),
		S(  74,  -55), S( 110,  -46), S(  96,  -39), S(  24,  -33), S(  72,  -50), S(  25,  -21), S(  85,  -36), S(  78,  -55),
	},
};

constexpr PackedScore MOBILITY[4][28] = {
	{S(-135, -105), S( -34,  -51), S( -12,  -23), S(  -3,   -1), S(   6,   10), S(   9,   21), S(  17,   25), S(  26,   28), S(  36,   25)},
	{S( -38, -172), S( -54,  -88), S( -20,  -41), S( -10,  -18), S(   3,   -6), S(  10,    3), S(  18,   14), S(  24,   19), S(  28,   26), S(  34,   28), S(  38,   33), S(  52,   26), S(  62,   29), S(  77,   19)},
	{S( -44, -159), S( -40,  -93), S( -23,  -38), S( -15,  -21), S(  -8,  -12), S(  -5,   -4), S(  -3,    1), S(   0,    7), S(   4,    8), S(  10,   11), S(  14,   15), S(  18,   18), S(  24,   21), S(  29,   21), S(  30,   21)},
	{S(   0,    0), S(   0,    0), S(-363, -124), S( -16, -280), S( -47, -110), S( -17,  -89), S( -10,  -71), S(  -6,  -52), S(  -2,  -34), S(   1,   -7), S(   5,   -1), S(  10,    5), S(  13,   14), S(  18,   14), S(  21,   19), S(  23,   27), S(  24,   30), S(  24,   39), S(  25,   45), S(  26,   49), S(  31,   54), S(  39,   46), S(  54,   46), S(  69,   37), S(  77,   39), S( 189,  -14), S( 111,   17), S( 121,    0)}
};

constexpr PackedScore THREATS[6][6] = {
	{S(  22,    2), S(  40,    3), S(  43,   35), S(  60,  -16), S(  45,  -41), S(   0,    0)},
	{S(  -6,    5), S(   0,    0), S(  22,   21), S(  46,  -13), S(  21,  -41), S(   0,    0)},
	{S(   3,   15), S(  21,   21), S(   0,    0), S(  29,    1), S(  35,   63), S(   0,    0)},
	{S(  -7,   12), S(   4,   14), S(  13,   11), S(   0,    0), S(  41,   -5), S(   0,    0)},
	{S(  -2,   10), S(   1,    7), S(  -1,   23), S(   1,   -3), S(   0,    0), S(   0,    0)},
	{S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)}
};

constexpr PackedScore PASSED_PAWN[8] = {S(   0,    0), S(  -5,    5), S( -11,   11), S( -12,   36), S(   9,   60), S(   4,  121), S(  27,   97), S(   0,    0)};
constexpr PackedScore ISOLATED_PAWN[8] = {S(  -3,   -1), S(  -6,  -16), S( -16,  -11), S( -14,  -19), S( -18,  -19), S( -14,   -8), S(  -7,  -15), S( -23,    5)};
constexpr PackedScore PAWN_STORM[3][8] = {
	{S(  22,  -32), S(  14,  -16), S(  16,   -1), S(   8,    3), S(   7,    4), S(   7,    6), S(   8,    4), S(  21,  -27)},
	{S(   0,    0), S( -36,  -28), S(  16,    8), S(  -8,   11), S(  -4,   14), S(  -1,   18), S(  -1,   17), S(   8,  -13)},
	{S( -19,   10), S( -13,   15), S(  -4,   17), S(  -3,   18), S(   2,   16), S(   5,   17), S(   4,   17), S( -12,   -9)}
};

constexpr PackedScore BISHOP_PAIR = S(  19,   61);
constexpr PackedScore ROOK_OPEN[2] = {S(  29,    9), S(  19,    6)};

#undef S


}
