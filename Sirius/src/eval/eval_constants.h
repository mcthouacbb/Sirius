#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[6] = {S(  49,   78), S( 277,  341), S( 282,  356), S( 387,  626), S( 817, 1187), S(0, 0)};

constexpr PackedScore PSQT[6][64] = {
	{
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
		S(  36,  103), S(  48,   99), S(  31,  100), S(  67,   51), S(  45,   53), S(  32,   60), S( -30,  109), S( -34,  106),
		S(  13,   49), S(   7,   64), S(  32,   18), S(  39,  -17), S(  46,  -20), S(  77,   -7), S(  38,   44), S(  22,   34),
		S(  -6,   25), S(  -1,   27), S(   4,    4), S(   4,  -10), S(  24,   -9), S(  26,  -10), S(  10,   19), S(   9,    2),
		S( -15,    4), S( -10,   18), S(  -4,   -4), S(   5,   -8), S(   7,   -6), S(  11,   -9), S(   2,   10), S(  -4,  -12),
		S( -23,   -3), S( -17,    7), S( -12,   -6), S(  -9,   -3), S(   0,   -1), S(  -5,   -5), S(   5,    1), S(  -9,  -18),
		S( -13,    2), S(  -5,   14), S(  -1,    1), S(  -2,   -2), S(   5,    9), S(  29,   -5), S(  22,    4), S(  -2,  -16),
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
	},
	{
		S(-108,  -26), S(-100,   -4), S( -64,    8), S( -15,   -7), S(  18,   -4), S( -35,  -23), S( -76,   -2), S( -74,  -46),
		S( -18,    3), S(  -6,    9), S(   5,    3), S(  28,    1), S(  28,   -8), S(  55,  -20), S(  16,   -2), S(  23,  -16),
		S(  -2,   -3), S(   5,    1), S(  16,    5), S(  31,    3), S(  50,   -6), S(  80,  -27), S(  29,  -13), S(  44,  -18),
		S(   1,   11), S(   7,    4), S(  23,    7), S(  43,    7), S(  45,    4), S(  50,   -1), S(  32,    0), S(  42,   -5),
		S(  -6,   11), S(   4,    1), S(  12,   13), S(  21,   13), S(  22,   19), S(  25,    3), S(  26,   -2), S(   7,    9),
		S( -19,    4), S(  -8,    3), S(  -2,    5), S(   1,   17), S(  13,   15), S(   2,    0), S(  13,   -1), S(  -2,    6),
		S( -23,    8), S( -19,   11), S( -11,    2), S(   3,    5), S(   2,    3), S(   1,   -1), S(   2,    0), S(  -2,   21),
		S( -54,   18), S( -14,    1), S( -29,    1), S( -17,    3), S( -13,    7), S(  -6,   -4), S( -11,    7), S( -28,   17),
	},
	{
		S( -20,    5), S( -47,   10), S( -39,    3), S( -77,   12), S( -60,    8), S( -56,    1), S( -24,    1), S( -48,   -2),
		S( -16,   -7), S( -17,   -1), S( -14,   -2), S( -17,   -1), S(  -4,   -9), S(  -3,   -9), S( -26,    3), S( -12,   -6),
		S(   2,    8), S(  11,    0), S(   3,    2), S(  15,   -6), S(  12,   -3), S(  39,    1), S(  31,   -3), S(  28,    7),
		S( -10,    6), S(   0,    9), S(   6,    3), S(  19,   11), S(   8,    4), S(  12,    7), S(   0,    7), S(   2,    3),
		S(  -2,    4), S(  -9,    8), S(   3,    6), S(  10,    7), S(  11,    3), S(   1,    2), S(  -3,    5), S(  10,   -4),
		S(   3,    4), S(  14,    3), S(   5,    2), S(  10,    4), S(  11,    8), S(   8,    0), S(  12,   -4), S(  18,   -2),
		S(  25,    6), S(  10,  -11), S(  21,  -12), S(   4,   -2), S(  10,    0), S(  17,   -8), S(  28,  -10), S(  23,   -7),
		S(  13,   -4), S(  27,    4), S(  11,   -3), S(  -1,   -1), S(   6,   -5), S(   3,    7), S(  19,  -10), S(  30,  -15),
	},
	{
		S( -15,   20), S( -17,   22), S( -18,   29), S( -22,   25), S(  -7,   18), S(  15,   12), S(  13,   15), S(  28,   10),
		S( -13,   13), S(  -5,   19), S(   8,   19), S(  26,    7), S(  13,    8), S(  30,    2), S(  37,   -1), S(  39,   -5),
		S( -18,   11), S(  14,    6), S(   7,    7), S(  13,    1), S(  36,   -9), S(  54,  -18), S(  75,  -16), S(  38,  -15),
		S( -18,   14), S(  -2,    7), S(  -3,   12), S(   1,    6), S(   8,   -6), S(  19,  -12), S(  20,   -9), S(  12,  -12),
		S( -27,    9), S( -26,    9), S( -19,    8), S( -11,    5), S( -10,    2), S( -14,   -1), S(   8,  -10), S(  -8,  -10),
		S( -30,    6), S( -26,    1), S( -22,    0), S( -17,    1), S(  -9,   -4), S(  -3,  -13), S(  21,  -28), S(   3,  -24),
		S( -31,    0), S( -25,    1), S( -15,   -1), S( -13,   -3), S(  -7,  -10), S(  -2,  -15), S(   7,  -22), S( -22,  -12),
		S( -13,    5), S( -13,    0), S(  -9,    5), S(  -1,   -3), S(   5,   -9), S(   2,   -5), S(   0,   -8), S( -13,   -5),
	},
	{
		S( -23,   -1), S( -35,   12), S( -21,   34), S(   4,   26), S(  -6,   29), S(   5,   17), S(  66,  -42), S(  11,   -2),
		S( -12,  -13), S( -25,    0), S( -24,   35), S( -34,   54), S( -30,   68), S(   4,   29), S(  -4,    9), S(  36,    8),
		S(   2,  -13), S(  -3,   -4), S(  -8,   24), S(   0,   31), S(  12,   37), S(  25,    8), S(  50,  -13), S(  42,   -5),
		S( -10,   -1), S(  -6,   10), S(  -8,   17), S( -11,   33), S( -17,   34), S(   9,   22), S(  11,   32), S(  21,   10),
		S(  -3,   -5), S( -13,   19), S( -10,   22), S( -12,   26), S(  -7,   29), S(  -2,   24), S(   4,   15), S(  15,    8),
		S(  -6,  -18), S(  -3,    0), S( -11,    9), S(  -8,   14), S(  -5,   19), S(   0,    6), S(   9,  -11), S(  12,  -22),
		S(   1,  -26), S(  -5,  -29), S(   3,  -22), S(   5,  -16), S(   4,  -14), S(   9,  -39), S(  14,  -68), S(  28,  -84),
		S(  -9,  -33), S(  -4,  -28), S(  -1,  -24), S(   4,  -12), S(   3,  -31), S(  -9,  -35), S(  -1,  -51), S(   5,  -50),
	},
	{
		S(  45,  -58), S(  63,  -32), S( 118,  -38), S(  47,  -14), S(  60,  -34), S(   8,   -5), S(  34,    7), S( 122,  -76),
		S(-116,   29), S(   3,   26), S(  23,   13), S( 152,  -20), S(  95,  -12), S(  40,   27), S(  17,   42), S( -66,   45),
		S(-126,   27), S(  28,   21), S(  31,   11), S(  50,    0), S(  88,   -5), S(  96,   11), S(  -5,   41), S( -66,   34),
		S( -77,    6), S( -42,   16), S( -14,   12), S(  -5,    2), S( -17,   -3), S( -33,   18), S( -80,   31), S(-151,   31),
		S( -81,   -3), S( -44,    9), S( -39,   11), S( -33,    6), S( -46,    6), S( -53,   13), S( -86,   22), S(-150,   23),
		S( -37,   -5), S(   1,    4), S( -29,   10), S( -14,    5), S( -19,    6), S( -39,   15), S( -26,   12), S( -64,   12),
		S(  48,  -19), S(  28,   -1), S(  22,   -1), S(   8,   -6), S(  -1,   -1), S(   6,    4), S(  26,    0), S(  31,  -12),
		S(  35,  -45), S(  64,  -33), S(  45,  -21), S( -11,  -18), S(  28,  -32), S( -13,   -4), S(  46,  -23), S(  47,  -49),
	},
};

constexpr PackedScore MOBILITY[4][28] = {
	{S(-124, -105), S( -33,  -57), S( -11,  -29), S(  -2,   -6), S(   6,    5), S(   9,   16), S(  17,   21), S(  27,   24), S(  35,   23), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -28, -157), S( -46,  -83), S( -18,  -37), S(  -8,  -15), S(   5,   -4), S(  12,    5), S(  19,   15), S(  25,   21), S(  29,   27), S(  34,   30), S(  36,   35), S(  48,   30), S(  51,   34), S(  62,   26), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -42, -113), S( -35,  -84), S( -21,  -32), S( -13,  -16), S(  -7,   -8), S(  -5,   -1), S(  -3,    4), S(  -0,    8), S(   2,   10), S(   7,   12), S(  11,   15), S(  14,   18), S(  19,   19), S(  22,   20), S(  21,   20), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S(   0,    0), S(   0,    0), S(-217,  -56), S( -17, -262), S( -43,  -92), S( -10,  -84), S(  -6,  -57), S(  -3,  -37), S(   1,  -22), S(   2,    1), S(   6,    5), S(  10,   10), S(  14,   16), S(  18,   15), S(  20,   17), S(  23,   22), S(  24,   23), S(  24,   28), S(  26,   30), S(  28,   29), S(  35,   28), S(  46,   11), S(  61,    5), S(  76,  -10), S(  82,  -12), S( 191,  -74), S(  85,  -32), S(  60,  -38)}
};

constexpr PackedScore THREATS[6][6] = {
	{S(  18,   -8), S(  39,    1), S(  43,   35), S(  62,  -16), S(  44,  -45), S(   0,    0)},
	{S(  -4,    8), S(   0,    0), S(  20,   21), S(  48,  -12), S(  22,  -44), S(   0,    0)},
	{S(   3,   13), S(  22,   21), S(   0,    0), S(  30,   -1), S(  35,   56), S(   0,    0)},
	{S(  -8,   11), S(   4,   16), S(  11,   10), S(   0,    0), S(  42,  -10), S(   0,    0)},
	{S(  -3,    7), S(   1,    9), S(  -2,   22), S(   2,   -5), S(   0,    0), S(   0,    0)},
	{S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)}
};

constexpr PackedScore PASSED_PAWN[8] = {S(   0,    0), S(  -3,    4), S(  -7,   13), S(  -8,   37), S(  11,   61), S(   6,  120), S(  48,  110), S(   0,    0)};
constexpr PackedScore ISOLATED_PAWN[8] = {S(  -0,    4), S(  -3,  -11), S( -11,   -5), S(  -7,  -12), S( -10,  -13), S(  -7,   -3), S(  -1,  -11), S(  -8,    9)};
constexpr PackedScore PAWN_PHALANX[8] = {S(   0,    0), S(   4,   -2), S(  13,    6), S(  22,   17), S(  49,   57), S( 129,  186), S(-215,  443), S(   0,    0)};
constexpr PackedScore DEFENDED_PAWN[8] = {S(   0,    0), S(   0,    0), S(  17,   11), S(  12,    8), S(  13,   15), S(  26,   36), S( 156,   28), S(   0,    0)};

constexpr PackedScore PAWN_STORM[3][8] = {
	{S(  23,  -37), S(  21,  -20), S(  19,   -5), S(  10,    1), S(   5,    3), S(   1,    7), S(   2,    5), S(  11,  -12)},
	{S(   0,    0), S( -49,  -33), S(  29,   -0), S(   1,    5), S(  -6,   11), S(  -7,   15), S(  -9,   17), S(   7,   -4)},
	{S(  -3,   -1), S(  -2,    6), S(   6,    9), S(   3,   10), S(   5,    9), S(   5,    9), S(   3,    8), S(  -9,   -3)}
};
constexpr PackedScore PAWN_SHIELD[3][8] = {
	{S(  -0,  -16), S(  -9,  -10), S(  -7,  -13), S(  -1,  -10), S(  11,  -10), S(  13,  -18), S(  20,  -19), S(  12,   -2)},
	{S(   0,    0), S( -18,   -1), S( -12,   -6), S(   5,   -1), S(  18,   -3), S(  28,  -15), S(  51,  -25), S(  20,    3)},
	{S(  -2,  -11), S(  -2,   -8), S(  -0,   -7), S(   1,   -1), S(   6,    2), S(   4,    6), S(  14,   11), S(  -7,    7)}
};
constexpr PackedScore SAFE_KNIGHT_CHECK = S(  81,   -6);
constexpr PackedScore SAFE_BISHOP_CHECK = S(  19,   -7);
constexpr PackedScore SAFE_ROOK_CHECK = S(  58,   -6);
constexpr PackedScore SAFE_QUEEN_CHECK = S(  35,   12);

constexpr PackedScore KNIGHT_OUTPOST = S(  31,   23);
constexpr PackedScore BISHOP_PAIR = S(  20,   59);
constexpr PackedScore ROOK_OPEN[2] = {S(  27,    9), S(  15,    8)};

#undef S


}
