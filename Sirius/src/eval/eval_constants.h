#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[7] = {
    S(0, 0), S(64, 99), S(272, 339), S(280, 352), S(366, 628), S(791, 1193), S(0, 0)
};

constexpr PackedScore PSQT[7][64] = {
    {},
    {
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
		S(  34,  110), S(  39,   98), S(  22,  101), S(  58,   49), S(  32,   48), S(  14,   57), S( -57,  100), S( -51,  116),
		S(  10,   44), S(  -1,   49), S(  27,   10), S(  32,  -26), S(  39,  -29), S(  70,  -16), S(  40,   25), S(  27,   28),
		S( -12,   29), S( -13,   20), S(  -4,    6), S(  -3,  -11), S(  15,   -9), S(  19,  -11), S(   0,    9), S(  12,    5),
		S( -16,   10), S( -18,   10), S(  -6,   -2), S(   6,   -7), S(   6,   -5), S(   9,   -8), S(  -7,    0), S(   2,   -5),
		S( -18,    6), S( -14,    4), S(  -8,   -1), S(  -3,    0), S(  11,    2), S(   4,   -4), S(  15,   -6), S(   7,   -8),
		S( -12,    8), S( -12,    6), S(  -5,    2), S(  -5,    1), S(   7,   10), S(  27,   -4), S(  25,   -8), S(   4,   -9),
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
	},
	{
		S(-101,  -37), S(-106,   -7), S( -58,    3), S( -24,   -6), S(   8,   -3), S( -40,  -25), S( -83,   -4), S( -60,  -56),
		S(  -7,   -6), S(  -3,    3), S(  23,   -3), S(  38,   -4), S(  26,   -9), S(  76,  -24), S(   4,   -2), S(  35,  -22),
		S(   0,   -5), S(  22,   -2), S(  26,   12), S(  41,   13), S(  70,   -1), S(  82,  -12), S(  46,  -11), S(  35,  -15),
		S(   5,    9), S(   7,   12), S(  22,   21), S(  48,   22), S(  33,   21), S(  46,   19), S(  20,   12), S(  42,   -1),
		S(  -5,   13), S(  -2,    6), S(   5,   22), S(  15,   23), S(  18,   27), S(  18,   14), S(  22,    5), S(   9,    9),
		S( -23,   -1), S( -13,    0), S( -10,    5), S(  -7,   19), S(   7,   16), S(  -6,    1), S(   9,   -3), S(  -7,    0),
		S( -24,    0), S( -21,    2), S( -14,   -3), S(   2,   -2), S(   0,   -2), S(  -1,   -6), S(  -4,   -5), S(  -4,   11),
		S( -59,   10), S( -12,   -9), S( -31,   -6), S( -17,   -5), S( -12,    0), S(  -8,  -11), S( -10,   -4), S( -31,    6),
	},
	{
		S( -19,    1), S( -54,    9), S( -44,    4), S( -85,   14), S( -66,    9), S( -55,   -2), S( -33,    2), S( -45,   -6),
		S( -13,  -11), S(  -6,   -5), S( -12,   -2), S( -19,    1), S(   4,  -11), S(  -4,   -5), S(  -9,   -3), S(   2,  -13),
		S(  -2,    7), S(  10,   -3), S(   8,    2), S(  20,   -8), S(  12,   -2), S(  47,    0), S(  28,   -3), S(  26,    3),
		S( -11,    4), S(   4,    7), S(  10,    2), S(  27,   15), S(  20,    7), S(  15,    8), S(   6,    3), S(  -7,    6),
		S(  -2,   -1), S( -10,    6), S(   0,   12), S(  18,   11), S(  16,   10), S(  -3,    6), S(  -6,    6), S(  15,  -11),
		S(   3,    1), S(  10,    5), S(   3,    7), S(   8,   10), S(   8,   13), S(   6,    7), S(   9,   -4), S(  19,   -4),
		S(  24,    8), S(   7,   -8), S(  18,  -10), S(  -3,    0), S(   4,    2), S(  15,   -7), S(  24,   -2), S(  21,   -7),
		S(   9,   -4), S(  26,    2), S(   7,   -7), S(  -6,   -3), S(  -1,   -5), S(  -1,    5), S(  18,  -13), S(  25,  -16),
	},
	{
		S(   4,   14), S(  -7,   20), S(  -9,   26), S( -10,   22), S(  10,   15), S(  32,   11), S(  28,   13), S(  44,    7),
		S( -13,   15), S( -13,   24), S(   1,   26), S(  16,   16), S(   6,   17), S(  34,    7), S(  34,    4), S(  59,   -6),
		S( -22,   13), S(   4,   12), S(  -1,   13), S(   2,   10), S(  29,   -1), S(  44,   -9), S(  86,  -15), S(  61,  -18),
		S( -24,   15), S( -11,   10), S( -13,   17), S(  -8,   12), S(  -1,   -1), S(   8,   -5), S(  26,   -6), S(  21,  -10),
		S( -31,    7), S( -34,    9), S( -27,    7), S( -21,    5), S( -18,    3), S( -21,    2), S(   9,   -8), S(  -3,  -10),
		S( -34,    0), S( -31,   -2), S( -28,   -5), S( -24,   -4), S( -15,   -9), S(  -8,  -15), S(  25,  -31), S(   4,  -27),
		S( -31,   -8), S( -28,   -5), S( -19,   -6), S( -16,   -8), S( -10,  -15), S(  -2,  -20), S(  12,  -26), S( -16,  -19),
		S( -14,   -3), S( -13,   -6), S( -10,   -1), S(  -3,   -8), S(   4,  -15), S(   2,   -9), S(  11,  -18), S(  -8,  -17),
	},
	{
		S( -12,  -12), S( -34,   16), S( -17,   36), S(  13,   25), S(  13,   23), S(  27,   15), S(  65,  -37), S(  21,   -5),
		S(  -4,  -21), S( -35,   13), S( -32,   45), S( -42,   67), S( -35,   82), S(   2,   39), S( -11,   29), S(  51,   10),
		S(   0,  -15), S( -10,   -3), S( -15,   31), S(  -6,   40), S(   6,   51), S(  49,   31), S(  58,   -1), S(  64,    1),
		S( -15,   -4), S( -13,    7), S( -17,   18), S( -16,   37), S( -17,   54), S(  -1,   42), S(   9,   40), S(  17,   25),
		S(  -8,  -14), S( -18,    9), S( -18,   13), S( -13,   29), S( -14,   30), S( -12,   26), S(   1,   17), S(  10,   15),
		S(  -9,  -28), S(  -7,  -13), S( -14,    4), S( -13,    2), S( -10,    7), S(  -4,    2), S(   9,  -13), S(  11,  -23),
		S(   0,  -35), S(  -7,  -33), S(   1,  -34), S(   3,  -29), S(   1,  -24), S(   9,  -48), S(  17,  -73), S(  35,  -91),
		S(  -7,  -37), S(  -4,  -37), S(   0,  -39), S(   5,  -28), S(   3,  -41), S(  -9,  -39), S(  12,  -59), S(  13,  -66),
	},
	{
		S(  69, -106), S(  61,  -56), S(  76,  -42), S( -52,    4), S( -10,  -10), S(  47,  -13), S(  99,  -22), S( 205, -128),
		S( -60,  -11), S(  -7,   16), S( -43,   28), S(  54,   13), S(   9,   30), S(   8,   43), S(  49,   30), S(  26,    0),
		S( -70,    1), S(  36,   21), S( -27,   39), S( -47,   50), S( -10,   51), S(  65,   42), S(  44,   40), S(   4,   10),
		S( -38,   -9), S( -47,   25), S( -67,   45), S(-111,   58), S(-102,   58), S( -64,   53), S( -57,   40), S( -83,   15),
		S( -41,  -18), S( -45,   13), S( -76,   37), S(-109,   53), S(-106,   52), S( -67,   38), S( -69,   25), S(-100,   10),
		S(   5,  -29), S(  21,   -4), S( -38,   19), S( -54,   31), S( -46,   31), S( -44,   22), S(   0,    3), S( -18,   -9),
		S(  91,  -46), S(  48,  -19), S(  33,   -7), S(  -1,    3), S(  -6,    8), S(  14,   -2), S(  59,  -19), S(  67,  -37),
		S(  80,  -82), S( 105,  -63), S(  80,  -44), S( -10,  -26), S(  47,  -44), S(  14,  -27), S(  84,  -54), S(  84,  -84),
	},
};

constexpr PackedScore MOBILITY[4][28] = {
    {S(-135, -104), S( -38,  -48), S( -16,  -20), S(  -7,    2), S(   3,   10), S(   4,   21), S(  15,   23), S(  24,   25), S(  35,   21)},
    {S( -31, -162), S( -55,  -78), S( -22,  -33), S( -11,  -10), S(   1,   -1), S(   9,    6), S(  16,   15), S(  22,   20), S(  25,   25), S(  29,   25), S(  32,   27), S(  45,   20), S(  53,   20), S(  62,   10)},
    {S( -62, -121), S( -45,  -68), S( -19,  -31), S( -11,  -16), S(  -5,   -7), S(  -1,   -0), S(   2,    5), S(   4,   11), S(   8,   11), S(  14,   14), S(  18,   17), S(  21,   21), S(  26,   23), S(  32,   22), S(  33,   22)},
    {S(   0,    0), S(   0,    0), S(-174,  -51), S( -35, -226), S( -48,  -95), S( -19,  -74), S( -11,  -59), S(  -6,  -41), S(  -2,  -24), S(   1,    2), S(   5,    7), S(  10,   13), S(  14,   20), S(  19,   20), S(  21,   24), S(  23,   32), S(  24,   34), S(  24,   43), S(  25,   48), S(  26,   50), S(  33,   54), S(  40,   45), S(  54,   45), S(  69,   34), S(  81,   34), S( 191,  -19), S( 114,   13), S(  73,   24)}
};

constexpr PackedScore PASSED_PAWN[8] = {S(   0,    0), S(  -5,   12), S(  -9,   17), S(  -8,   40), S(  12,   62), S(   3,  125), S(  23,  102), S(   0,    0)};
constexpr PackedScore ISOLATED_PAWN[8] = {S( -10,  -11), S(  -7,  -15), S( -18,  -17), S( -18,  -22), S( -21,  -24), S( -15,  -14), S( -10,  -14), S( -21,  -10)};

constexpr PackedScore BISHOP_PAIR = S(21, 64);

constexpr PackedScore ROOK_OPEN = S(32, 8);
constexpr PackedScore ROOK_SEMI_OPEN = S(13, 11);

#undef S


}
