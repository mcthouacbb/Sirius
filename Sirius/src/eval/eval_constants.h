#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[6] = {S(  50,   78), S( 275,  341), S( 281,  357), S( 388,  628), S( 823, 1181), S(0, 0)};

constexpr PackedScore PSQT[6][64] = {
	{
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
		S(  37,  103), S(  48,   98), S(  32,   99), S(  65,   51), S(  42,   54), S(  33,   60), S( -32,  109), S( -30,  104),
		S(   9,   50), S(   5,   63), S(  29,   18), S(  36,  -17), S(  44,  -20), S(  74,   -6), S(  37,   44), S(  21,   34),
		S(  -9,   25), S(  -3,   26), S(   2,    3), S(   2,  -10), S(  22,  -10), S(  24,  -11), S(   9,   19), S(   9,    1),
		S( -16,    4), S(  -9,   17), S(  -4,   -4), S(   4,   -8), S(   7,   -7), S(  12,  -11), S(   1,   10), S(  -2,  -13),
		S( -23,   -4), S( -15,    6), S( -11,   -7), S(  -8,   -4), S(   1,   -2), S(  -3,   -7), S(   5,    0), S(  -6,  -19),
		S( -14,    2), S(  -5,   14), S(  -2,    1), S(  -2,   -2), S(   5,    9), S(  29,   -6), S(  22,    4), S(  -1,  -16),
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
	},
	{
		S(-103,  -28), S( -97,   -5), S( -64,    8), S( -22,   -5), S(   3,    0), S( -48,  -19), S( -83,    0), S( -74,  -46),
		S( -17,    2), S(  -2,    7), S(   4,    3), S(  19,    3), S(  14,   -4), S(  33,  -14), S(  14,   -1), S(   6,  -12),
		S(   1,   -4), S(   8,    0), S(  18,    4), S(  23,    5), S(  36,   -2), S(  61,  -22), S(  18,   -9), S(  22,  -13),
		S(   5,    9), S(  10,    3), S(  26,    6), S(  38,    9), S(  34,    8), S(  40,    2), S(  25,    1), S(  33,   -2),
		S(  -1,    8), S(   9,   -1), S(  15,   12), S(  24,   11), S(  16,   21), S(  20,    4), S(  15,    2), S(   3,   10),
		S( -11,    2), S(  -1,    1), S(   5,    2), S(   7,   15), S(  19,   13), S(   7,   -3), S(  17,   -4), S(   4,    4),
		S( -15,    5), S( -12,    9), S(  -4,    0), S(  10,    2), S(   8,    1), S(   8,   -3), S(   9,   -2), S(   6,   19),
		S( -46,   16), S(  -7,   -1), S( -22,   -1), S( -10,    1), S(  -6,    5), S(   2,   -7), S(  -4,    6), S( -18,   14),
	},
	{
		S( -16,    4), S( -48,   10), S( -39,    3), S( -81,   13), S( -69,   10), S( -61,    2), S( -27,    1), S( -55,   -1),
		S( -14,   -8), S( -12,   -2), S( -12,   -3), S( -18,    0), S( -11,   -7), S( -15,   -6), S( -42,    6), S( -27,   -2),
		S(   6,    7), S(  15,   -1), S(   7,    1), S(  15,   -6), S(   8,   -2), S(  34,    2), S(  23,   -1), S(  21,    9),
		S(  -8,    5), S(   3,    8), S(   5,    3), S(  20,   11), S(   6,    5), S(   8,    8), S(  -4,    8), S(  -4,    4),
		S(   1,    3), S(  -8,    8), S(   4,    6), S(  11,    7), S(  10,    3), S(   0,    2), S(  -1,    4), S(   5,   -3),
		S(   3,    4), S(  16,    2), S(   8,    1), S(  11,    3), S(  12,    8), S(  12,   -1), S(  15,   -4), S(  20,   -4),
		S(  25,    7), S(  13,  -11), S(  21,  -13), S(   5,   -2), S(  14,   -1), S(  21,   -9), S(  33,  -11), S(  25,   -8),
		S(  14,   -4), S(  25,    5), S(  11,   -2), S(   2,   -1), S(  10,   -5), S(   6,    7), S(  22,  -11), S(  33,  -17),
	},
	{
		S( -12,   18), S( -10,   19), S( -15,   28), S( -22,   27), S( -11,   20), S(  11,   14), S(  15,   15), S(  26,    9),
		S( -10,   13), S(  -3,   20), S(  11,   21), S(  27,   10), S(  13,   11), S(  23,    6), S(  31,    2), S(  34,   -2),
		S( -16,   11), S(  15,    6), S(   6,   10), S(   8,    5), S(  27,   -3), S(  38,  -11), S(  62,  -11), S(  22,  -10),
		S( -15,   12), S(   2,    5), S(   0,   11), S(   3,    5), S(   8,   -6), S(  15,   -9), S(  15,   -6), S(   7,   -9),
		S( -23,    5), S( -22,    6), S( -15,    5), S(  -7,    2), S(  -6,    0), S( -14,    1), S(   4,   -7), S( -10,   -9),
		S( -25,    1), S( -21,   -3), S( -17,   -5), S( -12,   -3), S(  -5,   -7), S(  -3,  -12), S(  17,  -24), S(   3,  -24),
		S( -26,   -6), S( -20,   -5), S( -10,   -6), S(  -8,   -7), S(  -4,  -13), S(   0,  -16), S(   7,  -22), S( -19,  -15),
		S(  -9,    0), S(  -8,   -5), S(  -4,    0), S(   3,   -6), S(   9,  -12), S(   5,   -7), S(   1,  -10), S(  -9,   -9),
	},
	{
		S( -22,    0), S( -32,    9), S( -21,   32), S(  -5,   26), S( -11,   28), S(  -2,   19), S(  53,  -35), S(  -3,    4),
		S(  -6,  -15), S( -21,   -1), S( -22,   35), S( -33,   53), S( -38,   69), S(  -3,   30), S(  -6,   11), S(  31,   11),
		S(   3,  -12), S(  -2,   -3), S(  -8,   24), S(  -6,   31), S(  -1,   40), S(   7,   13), S(  25,   -3), S(  19,    2),
		S(  -9,    2), S(  -3,   11), S(  -5,   15), S(  -9,   29), S( -16,   31), S(   0,   20), S(  -1,   31), S(   6,   11),
		S(   2,   -6), S(  -8,   17), S(  -5,   19), S(  -6,   23), S(  -1,   24), S(  -1,   17), S(   6,    9), S(  11,    3),
		S(   0,  -18), S(   3,   -2), S(  -5,    9), S(  -2,   12), S(   1,   15), S(   5,    3), S(  14,  -15), S(  14,  -24),
		S(   6,  -27), S(   1,  -28), S(   9,  -22), S(  11,  -17), S(  10,  -13), S(  16,  -40), S(  21,  -70), S(  34,  -87),
		S(  -2,  -32), S(   2,  -29), S(   5,  -24), S(  10,  -11), S(   9,  -27), S(  -3,  -36), S(   5,  -51), S(  13,  -52),
	},
	{
		S(  39,  -61), S(  48,  -32), S( 104,  -36), S(  31,  -11), S(  45,  -30), S(  -4,   -3), S(  27,    7), S( 120,  -77),
		S(-115,   27), S(   7,   25), S(  22,   14), S( 144,  -18), S(  89,   -9), S(  38,   27), S(  21,   41), S( -64,   44),
		S(-119,   24), S(  40,   18), S(  37,   10), S(  52,    2), S(  91,   -4), S( 102,   11), S(   4,   40), S( -58,   32),
		S( -71,    3), S( -28,   14), S(  -3,   11), S(   0,    3), S(  -8,   -3), S( -23,   17), S( -67,   28), S(-146,   29),
		S( -76,   -6), S( -31,    6), S( -22,    8), S( -19,    5), S( -27,    4), S( -34,   10), S( -66,   18), S(-147,   21),
		S( -41,   -7), S(   9,    2), S( -17,    8), S(   1,    2), S(   0,    2), S( -20,   11), S( -11,    8), S( -67,   12),
		S(  35,  -19), S(  25,   -2), S(  19,   -1), S(   2,   -5), S(  -2,   -1), S(   5,    3), S(  25,   -1), S(  19,  -11),
		S(  16,  -43), S(  46,  -29), S(  21,  -15), S( -35,  -13), S(   4,  -25), S( -33,    0), S(  26,  -17), S(  24,  -43),
	},
};

constexpr PackedScore MOBILITY[4][28] = {
	{S(-124, -104), S( -34,  -56), S( -13,  -28), S(  -4,   -5), S(   5,    6), S(   8,   17), S(  16,   22), S(  26,   25), S(  35,   24), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -23, -161), S( -43,  -85), S( -15,  -40), S(  -6,  -18), S(   6,   -6), S(  13,    3), S(  19,   14), S(  24,   20), S(  27,   26), S(  32,   29), S(  33,   34), S(  44,   28), S(  44,   33), S(  54,   25), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -48,  -98), S( -30,  -87), S( -18,  -33), S( -10,  -17), S(  -5,   -9), S(  -2,   -2), S(   0,    3), S(   2,    8), S(   5,   10), S(   9,   12), S(  11,   16), S(  13,   20), S(  16,   22), S(  19,   23), S(  19,   22), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S(   0,    0), S(   0,    0), S(-150,  -34), S( -24, -230), S( -39,  -96), S(  -7,  -88), S(  -2,  -62), S(   0,  -41), S(   4,  -26), S(   6,   -4), S(  10,   -0), S(  14,    4), S(  17,   11), S(  22,    9), S(  24,   11), S(  26,   16), S(  27,   17), S(  27,   22), S(  29,   24), S(  31,   23), S(  37,   21), S(  49,    4), S(  63,   -2), S(  78,  -17), S(  79,  -15), S( 188,  -78), S(  87,  -37), S(  38,  -32)}
};

constexpr PackedScore THREATS[6][6] = {
	{S(  18,   -8), S(  40,    1), S(  41,   35), S(  68,  -18), S(  45,  -45), S(   0,    0)},
	{S(  -5,    8), S(   0,    0), S(  21,   21), S(  51,  -13), S(  24,  -45), S(   0,    0)},
	{S(   2,   13), S(  20,   21), S(   0,    0), S(  31,   -1), S(  36,   56), S(   0,    0)},
	{S(  -9,   13), S(   2,   18), S(  10,   12), S(   0,    0), S(  45,  -12), S(   0,    0)},
	{S(  -2,    6), S(   1,   10), S(  -2,   24), S(   2,   -4), S(   0,    0), S(   0,    0)},
	{S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)}
};

constexpr PackedScore PASSED_PAWN[8] = {S(   0,    0), S(  -2,    4), S(  -7,   13), S(  -8,   37), S(  12,   61), S(   7,  119), S(  48,  109), S(   0,    0)};
constexpr PackedScore ISOLATED_PAWN[8] = {S(   0,    4), S(  -3,  -10), S( -11,   -5), S(  -7,  -12), S( -11,  -13), S(  -7,   -3), S(  -1,  -11), S( -10,    9)};
constexpr PackedScore PAWN_PHALANX[8] = {S(   0,    0), S(   5,   -2), S(  12,    6), S(  22,   17), S(  49,   57), S( 132,  184), S(-145,  418), S(   0,    0)};
constexpr PackedScore DEFENDED_PAWN[8] = {S(   0,    0), S(   0,    0), S(  17,   10), S(  12,    8), S(  13,   15), S(  26,   36), S( 160,   27), S(   0,    0)};

constexpr PackedScore PAWN_STORM[3][8] = {
	{S(  25,  -36), S(  24,  -19), S(  20,   -4), S(  11,    2), S(   4,    4), S(  -1,    7), S(   1,    5), S(  10,  -12)},
	{S(   0,    0), S( -50,  -31), S(  28,    0), S(   4,    4), S(  -5,   10), S(  -7,   14), S(  -8,   15), S(   8,   -5)},
	{S(   1,   -1), S(   1,    6), S(   8,    9), S(   4,   11), S(   4,    9), S(   3,    9), S(   3,    8), S(  -8,   -2)}
};
constexpr PackedScore PAWN_SHIELD[3][8] = {
	{S(   2,  -15), S(  -9,  -10), S(  -6,  -13), S(  -2,  -10), S(  10,   -9), S(  13,  -18), S(  22,  -19), S(   9,   -1)},
	{S(   0,    0), S( -17,   -1), S( -11,   -6), S(   6,   -1), S(  16,   -2), S(  26,  -14), S(  52,  -26), S(  20,    3)},
	{S(  -2,  -11), S(  -2,   -8), S(   0,   -7), S(   1,   -0), S(   4,    3), S(   3,    6), S(  14,   11), S(  -5,    7)}
};
constexpr PackedScore SAFE_KNIGHT_CHECK = S(  73,   -3);
constexpr PackedScore SAFE_BISHOP_CHECK = S(  15,   -6);
constexpr PackedScore SAFE_ROOK_CHECK = S(  50,   -1);
constexpr PackedScore SAFE_QUEEN_CHECK = S(  29,   13);
constexpr PackedScore KING_ATTACKER_WEIGHT[4] = {S(  15,   -4), S(  10,   -1), S(  10,  -17), S(   1,   13)};
constexpr PackedScore KING_ATTACKS[32] = {S( -24,    9), S( -29,    7), S( -32,    5), S( -30,   11), S( -21,    8), S(  -4,    4), S(  23,   -7), S(  57,  -21), S( 102,  -41), S( 139,  -57), S( 187,  -71), S( 260, -113), S( 265,  -95), S( 257,  -86)};

constexpr PackedScore KNIGHT_OUTPOST = S(  33,   22);
constexpr PackedScore BISHOP_PAIR = S(  21,   58);
constexpr PackedScore ROOK_OPEN[2] = {S(  27,    9), S(  15,    8)};

#undef S


}
