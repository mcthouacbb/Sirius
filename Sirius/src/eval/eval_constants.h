#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[6] = {S(  58,   84), S( 286,  359), S( 297,  380), S( 400,  674), S( 853, 1227), S(0, 0)};

constexpr PackedScore PSQT[6][64] = {
	{
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
		S(  36,   78), S(  45,   79), S(  29,   85), S(  64,   44), S(  48,   50), S(  35,   59), S( -23,   97), S( -28,   90),
		S(  15,   39), S(  11,   54), S(  37,   13), S(  46,  -16), S(  55,  -18), S(  86,   -8), S(  47,   37), S(  32,   27),
		S(  -8,   23), S(  -3,   26), S(   4,    2), S(   6,  -10), S(  26,  -10), S(  26,  -11), S(  11,   16), S(  13,    0),
		S( -15,    6), S( -11,   21), S(  -3,   -3), S(   6,   -9), S(   9,   -8), S(  13,  -11), S(   3,    9), S(   0,  -12),
		S( -26,   -1), S( -19,   10), S( -12,   -5), S(  -9,   -2), S(   1,   -2), S(  -5,   -6), S(   5,   -1), S(  -7,  -18),
		S( -17,    4), S( -10,   16), S(  -4,    2), S(  -5,   -2), S(   5,   10), S(  28,   -6), S(  21,    3), S(  -2,  -15),
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
	},
	{
		S( -93,  -43), S( -89,  -12), S( -73,    8), S( -25,   -7), S(   1,   -6), S( -59,  -24), S( -83,   -9), S( -62,  -62),
		S(  -8,    0), S(   1,    8), S(   9,    3), S(  15,    3), S(  12,   -8), S(  32,  -12), S(  12,    0), S(  12,  -17),
		S(   4,   -2), S(   8,    2), S(   6,   15), S(  15,   17), S(  28,    9), S(  53,  -12), S(  22,  -10), S(  23,  -15),
		S(   8,   10), S(   7,    8), S(  18,   17), S(  29,   19), S(  21,   23), S(  31,   16), S(  20,   10), S(  37,   -2),
		S(   2,    7), S(   9,    3), S(   8,   21), S(  18,   19), S(  11,   29), S(  13,   14), S(  13,    7), S(   5,    6),
		S( -11,   -4), S(  -1,    1), S(  -2,    6), S(   4,   21), S(  18,   18), S(   0,    1), S(  18,   -4), S(   3,   -1),
		S( -10,   -2), S(  -9,    5), S(  -3,   -1), S(  10,    0), S(   8,   -2), S(  12,   -3), S(  12,   -6), S(   9,   10),
		S( -40,   11), S(  -3,  -12), S( -13,   -5), S(  -3,   -2), S(   4,   -1), S(   7,  -11), S(  -2,   -4), S(  -7,    7),
	},
	{
		S( -18,    4), S( -46,    8), S( -41,    3), S( -80,   11), S( -73,   12), S( -70,   -1), S( -32,    1), S( -53,   -7),
		S(  -5,  -12), S(  16,   -7), S(   2,   -4), S( -12,    2), S(  15,  -11), S( -13,   -2), S( -23,    3), S( -40,   -2),
		S(   5,    4), S(  19,   -2), S(  21,    3), S(  28,   -7), S(  11,    0), S(  47,    4), S(  20,    2), S(  23,    2),
		S(  -5,    0), S(   5,    6), S(  16,    3), S(  29,   19), S(  21,   11), S(  10,   12), S(   3,    2), S(  -4,    2),
		S(   2,   -1), S(  -4,    4), S(  -3,   13), S(  19,   15), S(  15,   13), S(  -5,    5), S(  -2,    4), S(  12,  -15),
		S(   1,   -3), S(  11,    4), S(   4,    6), S(   0,   12), S(   3,   14), S(   7,    4), S(  12,   -6), S(  19,  -11),
		S(  19,    4), S(   5,  -13), S(  12,  -10), S(  -8,    0), S(   2,    2), S(  15,   -7), S(  25,  -10), S(  20,  -13),
		S(   8,   -8), S(  16,    7), S(  -1,   -3), S(  -3,   -4), S(   7,  -10), S(  -4,    5), S(  20,  -13), S(  31,  -25),
	},
	{
		S( -17,   17), S( -20,   19), S( -28,   27), S( -35,   24), S( -23,   17), S(  -4,   16), S(  -4,   20), S(  16,   12),
		S(  -3,   17), S(   3,   25), S(  11,   27), S(  28,   16), S(  12,   17), S(  17,   13), S(  27,    7), S(  28,    4),
		S(  -9,   17), S(  18,   13), S(   9,   18), S(   7,   14), S(  29,    6), S(  35,   -1), S(  52,   -1), S(  22,   -4),
		S(  -9,   17), S(   4,   12), S(   3,   17), S(   4,   12), S(   8,    2), S(  11,    0), S(   6,    6), S(   7,    0),
		S( -16,    5), S( -14,    6), S(  -8,    3), S(  -1,    1), S(  -1,   -1), S( -15,    2), S(   3,   -5), S( -11,   -4),
		S( -18,   -3), S( -14,   -7), S( -11,  -10), S(  -9,   -8), S(   1,  -13), S(  -3,  -15), S(  18,  -27), S(   3,  -25),
		S( -18,  -12), S( -14,  -11), S(  -4,  -13), S(  -3,  -14), S(   1,  -20), S(   6,  -25), S(  12,  -28), S( -14,  -22),
		S(  -9,  -11), S(  -9,  -16), S(  -8,  -10), S(   0,  -17), S(   6,  -23), S(   1,  -19), S(   0,  -21), S( -12,  -19),
	},
	{
		S( -17,  -15), S( -32,   -1), S( -26,   24), S(   0,   14), S(  -3,   16), S(   5,   10), S(  50,  -41), S(   7,  -10),
		S(   5,  -14), S(  -8,    1), S(  -7,   33), S( -21,   52), S( -23,   68), S(   6,   34), S(   7,   10), S(  39,    9),
		S(   8,   -4), S(   6,    5), S(  -2,   32), S(   2,   37), S( -11,   54), S(  13,   23), S(  28,    5), S(  27,   -1),
		S(  -2,    5), S(  -5,   23), S(   0,   23), S(  -9,   41), S( -18,   44), S(   2,   26), S(   1,   36), S(  11,   14),
		S(  -2,   -1), S(  -4,   18), S(  -7,   21), S(  -9,   32), S(  -2,   31), S(  -6,   26), S(   8,    5), S(  14,   -1),
		S(   2,  -24), S(   1,   -6), S( -10,    9), S( -10,   16), S(  -5,   21), S(  -1,    5), S(  13,  -18), S(  15,  -30),
		S(   4,  -38), S(  -2,  -37), S(   2,  -26), S(   2,  -13), S(   1,  -12), S(   7,  -39), S(  16,  -71), S(  29,  -89),
		S( -14,  -38), S( -15,  -31), S( -13,  -23), S( -10,  -23), S(  -9,  -25), S( -19,  -34), S(  -8,  -49), S(   9,  -57),
	},
	{
		S(  48,  -54), S(  81,  -30), S( 118,  -33), S(  49,  -10), S(  60,  -34), S( -17,    1), S(  20,    7), S(  98,  -69),
		S( -95,   27), S(   7,   29), S(  25,   14), S( 146,  -17), S(  90,  -11), S(  44,   27), S(   9,   45), S( -87,   48),
		S(-111,   27), S(  38,   19), S(  31,    9), S(  43,    3), S(  83,    1), S( 100,   12), S(  -7,   42), S( -70,   32),
		S( -65,    1), S( -24,    9), S( -15,    7), S( -16,    2), S( -21,   -3), S( -30,   16), S( -65,   25), S(-153,   28),
		S( -66,  -12), S( -32,   -1), S( -31,    3), S( -31,    2), S( -36,    1), S( -39,    5), S( -72,   13), S(-150,   18),
		S( -47,   -6), S(  10,   -3), S( -20,    2), S(  -2,   -1), S(  -4,   -2), S( -22,    5), S( -12,    3), S( -69,    8),
		S(  37,  -17), S(  27,   -3), S(  24,   -3), S(   6,   -5), S(   2,   -2), S(  12,   -1), S(  27,   -4), S(  22,  -13),
		S(  25,  -35), S(  58,  -26), S(  29,  -11), S( -25,   -3), S(  12,  -20), S( -18,    2), S(  36,  -16), S(  34,  -40),
	},
};

constexpr PackedScore MOBILITY[4][28] = {
	{S( -17,  -16), S( -39,  -45), S( -16,  -17), S(  -6,    5), S(   5,   14), S(   8,   25), S(  19,   27), S(  29,   29), S(  41,   23), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S(   4,  -20), S( -32,  -72), S( -11,  -28), S(  -2,   -5), S(  10,    3), S(  17,   10), S(  23,   19), S(  28,   24), S(  30,   28), S(  32,   29), S(  32,   31), S(  40,   23), S(  32,   27), S(  45,   16), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -59,   32), S(  16,  -15), S( -25,  -37), S( -15,  -25), S( -10,  -20), S(  -4,   -5), S(  -2,    2), S(  -5,    8), S(  -1,    9), S(   2,   14), S(   7,   17), S(   9,   23), S(  14,   26), S(  22,   24), S(  29,   18), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -45,   76), S( -70,  -11), S(-114,    1), S( -73, -242), S( -76,  -83), S( -34,  -25), S( -24,   -4), S( -16,    1), S(  -8,    8), S(  -4,   27), S(  -1,   34), S(   3,   41), S(   6,   46), S(  10,   48), S(  14,   49), S(  17,   51), S(  20,   52), S(  20,   54), S(  21,   56), S(  22,   56), S(  29,   50), S(  37,   35), S(  41,   34), S(  66,    6), S(  71,    6), S( 112,  -29), S( 113,  -34), S(  84,  -42)}
};

constexpr PackedScore THREAT_BY_PAWN[6] = {S(   0,    0), S(  56,   24), S(  63,   45), S(  84,    4), S(  71,  -34), S(   0,    0)};
constexpr PackedScore THREAT_BY_MINOR[6] = {S(   0,    0), S(   7,   17), S(  26,   14), S(  55,    7), S(  59,   11), S(   0,    0)};

constexpr PackedScore PASSED_PAWN[8] = {S(   0,    0), S( -17,  -67), S( -15,  -51), S( -13,  -17), S(  12,   18), S(   1,   87), S(  50,   94), S(   0,    0)};
constexpr PackedScore ISOLATED_PAWN[8] = {S(  -4,    6), S(  -4,  -11), S( -11,   -6), S(  -7,  -13), S( -12,  -13), S(  -7,   -4), S(  -2,  -11), S( -11,    7)};
constexpr PackedScore PAWN_PHALANX[8] = {S(   0,    0), S(   4,   -1), S(  12,    7), S(  22,   18), S(  49,   59), S( 138,  183), S(-160,  440), S(   0,    0)};
constexpr PackedScore DEFENDED_PAWN[8] = {S(   0,    0), S(   0,    0), S(  19,   11), S(  12,    8), S(  14,   16), S(  29,   41), S( 170,   30), S(   0,    0)};
constexpr PackedScore OUR_PASSER_PROXIMITY[8] = {S(   0,    0), S(   5,   53), S(  -5,   39), S(  -4,   22), S(  -2,   12), S(   2,    9), S(  16,    7), S(   5,    6)};
constexpr PackedScore THEIR_PASSER_PROXIMITY[8] = {S(   0,    0), S( -75,   -7), S(   5,    1), S(  -1,   26), S(   5,   35), S(   5,   43), S(   8,   48), S( -11,   48)};

constexpr PackedScore PAWN_STORM[3][8] = {
	{S(  45,  -35), S(  24,  -17), S(  18,   -3), S(   9,   -0), S(   2,    2), S(  -2,    6), S(  -0,    5), S(   8,  -11)},
	{S(   0,    0), S(  12,  -29), S(  27,    2), S(   3,    1), S(  -5,    7), S(  -7,   12), S(  -8,   14), S(   7,   -2)},
	{S(  -1,   -1), S(  -8,    6), S(   3,    9), S(   2,    9), S(   4,    8), S(   4,    9), S(   4,    9), S(  -8,   -4)}
};
constexpr PackedScore PAWN_SHIELD[3][8] = {
	{S(   2,  -13), S(  -9,   -7), S(  -5,  -11), S(  -1,  -10), S(  13,  -14), S(  17,  -26), S(  29,  -29), S(   7,    0)},
	{S(   0,    0), S( -16,    3), S(  -9,   -4), S(   9,   -4), S(  21,  -11), S(  35,  -31), S(  52,  -39), S(  17,    2)},
	{S(  -2,   -9), S(  -2,   -6), S(   1,   -5), S(   1,    0), S(   4,    2), S(   5,    2), S(  23,    6), S(  -8,    7)}
};
constexpr PackedScore SAFE_KNIGHT_CHECK = S(  81,   -5);
constexpr PackedScore SAFE_BISHOP_CHECK = S(  16,   -6);
constexpr PackedScore SAFE_ROOK_CHECK = S(  58,   -3);
constexpr PackedScore SAFE_QUEEN_CHECK = S(  32,   11);
constexpr PackedScore KING_ATTACKER_WEIGHT[4] = {S(  15,   -2), S(  11,    4), S(   7,  -14), S(  -2,   18)};
constexpr PackedScore KING_ATTACKS[14] = {S( -22,   11), S( -25,    6), S( -28,    4), S( -28,    7), S( -21,    4), S(  -6,   -2), S(  16,   -9), S(  44,  -22), S(  91,  -45), S( 120,  -48), S( 158,  -63), S( 183,  -54), S( 220, -137), S( 181,   -3)};

constexpr PackedScore KNIGHT_OUTPOST = S(  34,   20);
constexpr PackedScore BISHOP_PAIR = S(  23,   64);
constexpr PackedScore ROOK_OPEN[2] = {S(  21,    8), S(   7,   22)};

constexpr PackedScore TEMPO = S(  26,   24);


#undef S


}
