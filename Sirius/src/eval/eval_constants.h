#pragma once

#include "../defs.h"

namespace eval
{

#define S(mg, eg) PackedScore(mg, eg)

constexpr PackedScore MATERIAL[6] = {S(  48,   78), S( 277,  342), S( 282,  354), S( 385,  626), S( 812, 1192), S(0, 0)};

constexpr PackedScore PSQT[6][64] = {
	{
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
		S(  36,  107), S(  47,  103), S(  28,  105), S(  63,   55), S(  41,   57), S(  34,   63), S( -31,  112), S( -26,  108),
		S(  13,   49), S(   4,   64), S(  30,   17), S(  38,  -17), S(  44,  -21), S(  73,   -6), S(  35,   44), S(  22,   33),
		S(  -6,   25), S(  -2,   27), S(   3,    4), S(   3,  -10), S(  21,   -9), S(  25,  -10), S(  10,   19), S(  10,    1),
		S( -14,    4), S( -11,   18), S(  -4,   -4), S(   4,   -8), S(   7,   -6), S(  12,   -9), S(   3,   10), S(  -3,  -12),
		S( -23,   -4), S( -18,    7), S( -12,   -6), S(  -9,   -3), S(   0,    0), S(  -3,   -5), S(   6,    1), S(  -8,  -19),
		S( -13,    1), S(  -7,   15), S(  -2,    2), S(  -3,   -1), S(   4,   10), S(  29,   -3), S(  23,    5), S(  -3,  -15),
		S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0),
	},
	{
		S(-112,  -32), S(-107,   -6), S( -60,    5), S( -22,   -7), S(   7,   -4), S( -39,  -24), S( -83,   -3), S( -77,  -50),
		S( -23,   -1), S( -12,    7), S(   2,    2), S(  24,    0), S(  23,   -9), S(  56,  -22), S(  10,   -3), S(  19,  -19),
		S(  -5,   -4), S(  14,    0), S(  28,    9), S(  42,    8), S(  59,   -2), S(  91,  -18), S(  34,   -8), S(  40,  -17),
		S(   3,   10), S(  14,    8), S(  31,   14), S(  55,   17), S(  48,   12), S(  58,   11), S(  31,    5), S(  42,   -3),
		S(  -6,   13), S(   4,    3), S(  13,   17), S(  23,   19), S(  24,   23), S(  25,    9), S(  30,    1), S(   8,   10),
		S( -23,    0), S( -11,   -1), S(  -3,    2), S(  -1,   15), S(  12,   14), S(   2,   -2), S(  11,   -3), S(  -7,    2),
		S( -26,    2), S( -24,    6), S( -15,   -2), S(   0,    0), S(  -1,   -1), S(  -2,   -4), S(  -1,   -3), S(  -5,   16),
		S( -60,   13), S( -18,   -6), S( -33,   -3), S( -21,   -1), S( -16,    4), S( -10,   -7), S( -16,    2), S( -34,   12),
	},
	{
		S( -19,    6), S( -50,    9), S( -41,    1), S( -78,   10), S( -63,    6), S( -53,   -3), S( -27,   -1), S( -47,   -3),
		S( -16,   -7), S( -16,   -2), S( -17,   -3), S( -20,   -3), S(  -7,  -10), S(  -2,  -11), S( -19,    0), S(  -3,   -9),
		S(   1,    8), S(   9,   -1), S(   2,    1), S(  13,   -7), S(  10,   -4), S(  48,   -3), S(  31,   -5), S(  31,    5),
		S( -12,    6), S(  -3,    9), S(   3,    2), S(  18,   10), S(  10,    2), S(  12,    5), S(  -2,    7), S(   0,    3),
		S(  -3,    4), S( -11,    8), S(   0,    7), S(  10,    6), S(  11,    3), S(  -1,    3), S(  -4,    5), S(   9,   -4),
		S(   0,    5), S(  12,    3), S(   4,    3), S(   8,    5), S(   9,    9), S(   9,    2), S(  10,   -2), S(  18,   -2),
		S(  23,    7), S(   8,  -10), S(  19,  -11), S(   1,    0), S(   9,    1), S(  15,   -6), S(  30,   -7), S(  22,   -6),
		S(  12,   -4), S(  26,    5), S(   9,   -2), S(  -2,    2), S(   4,   -2), S(   2,   10), S(  19,   -8), S(  31,  -16),
	},
	{
		S( -10,   20), S( -12,   22), S( -13,   29), S( -14,   25), S(   5,   17), S(  31,   10), S(  23,   14), S(  37,    9),
		S( -16,   14), S(  -8,   20), S(   4,   21), S(  21,    9), S(  13,    9), S(  38,    1), S(  45,   -2), S(  53,   -7),
		S( -22,   11), S(   8,    6), S(   1,    8), S(   6,    3), S(  31,   -7), S(  51,  -16), S(  83,  -17), S(  53,  -19),
		S( -22,   13), S(  -8,    6), S(  -8,   12), S(  -5,    6), S(   1,   -5), S(  15,  -11), S(  28,  -10), S(  18,  -12),
		S( -31,    7), S( -31,    9), S( -23,    7), S( -17,    5), S( -14,    2), S( -16,    0), S(  12,  -10), S(  -4,  -11),
		S( -34,    5), S( -29,    0), S( -25,   -1), S( -21,    0), S( -12,   -5), S(  -4,  -13), S(  27,  -28), S(   4,  -24),
		S( -33,   -2), S( -28,   -1), S( -17,   -2), S( -15,   -4), S(  -9,  -11), S(  -1,  -15), S(  12,  -23), S( -20,  -14),
		S( -16,    3), S( -15,   -1), S( -11,    3), S(  -3,   -4), S(   4,  -10), S(   1,   -4), S(   2,  -10), S( -13,   -8),
	},
	{
		S( -20,   -7), S( -36,   16), S( -16,   34), S(  10,   26), S(   9,   25), S(  26,   14), S(  72,  -42), S(  21,   -8),
		S(  -8,  -21), S( -30,    3), S( -30,   38), S( -41,   60), S( -32,   74), S(   8,   27), S(   2,   12), S(  49,    5),
		S(  -2,  -17), S(  -8,  -10), S( -11,   22), S(  -4,   32), S(   7,   42), S(  52,   22), S(  63,  -11), S(  62,    1),
		S( -15,   -6), S( -11,    1), S( -13,   10), S( -15,   29), S( -13,   44), S(   2,   34), S(  14,   34), S(  20,   19),
		S(  -9,  -12), S( -18,   10), S( -15,    9), S( -11,   23), S(  -9,   23), S(  -8,   21), S(   4,   17), S(  11,   17),
		S( -11,  -24), S(  -8,   -9), S( -13,    4), S( -12,    2), S( -10,    7), S(  -3,    2), S(  10,  -11), S(  10,  -13),
		S(  -5,  -26), S(  -9,  -26), S(  -2,  -29), S(   0,  -23), S(  -1,  -19), S(   6,  -41), S(  13,  -63), S(  25,  -75),
		S( -13,  -27), S(  -9,  -30), S(  -6,  -28), S(   0,  -16), S(  -1,  -32), S( -13,  -30), S(  -3,  -46), S(   6,  -56),
	},
	{
		S(  24,  -54), S(  65,  -31), S( 124,  -37), S(  44,  -12), S(  56,  -32), S(  45,   -8), S(  66,    6), S( 130,  -74),
		S(-117,   31), S(  -8,   29), S(  14,   15), S( 145,  -19), S(  89,  -10), S(  34,   29), S(  31,   43), S( -42,   45),
		S(-140,   30), S(  23,   22), S(  23,   12), S(  44,    2), S(  76,   -3), S(  93,   13), S(   5,   41), S( -67,   36),
		S( -88,    8), S( -54,   18), S( -25,   14), S( -20,    4), S( -29,   -1), S( -43,   20), S( -86,   32), S(-146,   31),
		S( -87,   -2), S( -56,   10), S( -53,   13), S( -47,    8), S( -58,    7), S( -66,   14), S( -92,   23), S(-151,   24),
		S( -40,   -4), S(  -4,    4), S( -37,   10), S( -22,    5), S( -27,    5), S( -53,   16), S( -33,   12), S( -62,   13),
		S(  55,  -19), S(  32,   -3), S(  25,   -4), S(  15,   -9), S(   4,   -3), S(  11,    1), S(  34,   -2), S(  38,  -11),
		S(  51,  -48), S(  80,  -36), S(  63,  -26), S(   6,  -23), S(  51,  -39), S(   1,  -10), S(  64,  -27), S(  63,  -51),
	},
};

constexpr PackedScore MOBILITY[4][28] = {
	{S(-118,  -95), S( -31,  -52), S(  -9,  -24), S(   0,   -2), S(   9,    9), S(  11,   20), S(  19,   24), S(  28,   27), S(  36,   25), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -29, -155), S( -46,  -84), S( -17,  -40), S(  -7,  -17), S(   6,   -6), S(  13,    3), S(  20,   14), S(  27,   19), S(  31,   26), S(  38,   27), S(  41,   32), S(  55,   25), S(  65,   28), S(  80,   17), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S( -50,  -88), S( -35,  -87), S( -21,  -36), S( -13,  -20), S(  -8,  -11), S(  -4,   -2), S(  -2,    3), S(   0,    9), S(   4,   11), S(   9,   13), S(  13,   17), S(  17,   21), S(  24,   22), S(  30,   23), S(  30,   22), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)},
	{S(   0,    0), S(   0,    0), S(-102,  -21), S( -35, -196), S( -46, -110), S( -14,  -92), S( -10,  -66), S(  -7,  -44), S(  -3,  -27), S(  -1,   -1), S(   3,    5), S(   7,   11), S(  10,   20), S(  15,   20), S(  17,   24), S(  19,   33), S(  21,   36), S(  21,   45), S(  22,   51), S(  24,   54), S(  29,   59), S(  39,   49), S(  52,   51), S(  66,   42), S(  70,   48), S( 177,   -4), S(  79,   40), S(  55,   39)}
};

constexpr PackedScore THREATS[6][6] = {
	{S(  18,   -9), S(  42,    5), S(  44,   35), S(  61,  -16), S(  44,  -40), S(   0,    0)},
	{S(  -6,    6), S(   0,    0), S(  21,   21), S(  46,  -13), S(  22,  -42), S(   0,    0)},
	{S(   4,   14), S(  21,   21), S(   0,    0), S(  30,    1), S(  35,   62), S(   0,    0)},
	{S(  -7,   12), S(   3,   14), S(  12,   10), S(   0,    0), S(  42,   -6), S(   0,    0)},
	{S(  -2,    9), S(   0,    7), S(  -2,   23), S(   2,   -3), S(   0,    0), S(   0,    0)},
	{S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0), S(   0,    0)}
};

constexpr PackedScore PASSED_PAWN[8] = {S(   0,    0), S(  -2,    4), S(  -7,   13), S(  -8,   36), S(  11,   61), S(   4,  120), S(  38,  106), S(   0,    0)};
constexpr PackedScore ISOLATED_PAWN[8] = {S(  -1,    5), S(  -3,  -11), S( -11,   -5), S(  -8,  -12), S( -11,  -12), S(  -6,   -3), S(  -2,  -11), S(  -7,    9)};
constexpr PackedScore PAWN_PHALANX[8] = {S(   0,    0), S(   4,   -2), S(  13,    6), S(  23,   16), S(  49,   56), S( 121,  186), S( -97,  403), S(   0,    0)};
constexpr PackedScore DEFENDED_PAWN[8] = {S(   0,    0), S(   0,    0), S(  17,   10), S(  12,    8), S(  13,   15), S(  26,   36), S( 150,   27), S(   0,    0)};

constexpr PackedScore PAWN_STORM[3][8] = {
	{S(  25,  -36), S(  19,  -18), S(  19,   -4), S(  10,    2), S(   5,    3), S(   1,    7), S(   1,    5), S(   7,  -12)},
	{S(   0,    0), S( -49,  -33), S(  29,    1), S(   2,    4), S(  -4,   11), S(  -5,   15), S(  -8,   16), S(   7,   -4)},
	{S(  -4,   -0), S(  -1,    7), S(   8,   10), S(   4,   11), S(   6,    9), S(   6,    9), S(   3,    8), S( -13,   -2)}
};
constexpr PackedScore PAWN_SHIELD[3][8] = {
	{S(   2,   15), S(   9,   10), S(   5,   13), S(  -1,   10), S( -14,    9), S( -17,   18), S( -19,   17), S( -13,    2)},
	{S(   0,    0), S(  24,    1), S(  14,    5), S(  -5,   -1), S( -19,    1), S( -30,   12), S( -54,   20), S( -27,   -3)},
	{S(   5,   11), S(   3,    7), S(  -1,    6), S(  -3,    0), S(  -8,   -3), S(  -5,   -7), S( -10,  -14), S(  10,   -7)}
};

constexpr PackedScore BISHOP_PAIR = S(  20,   60);
constexpr PackedScore ROOK_OPEN[2] = {S(  26,   10), S(  15,    7)};

#undef S


}
