#include "psqt.h"

namespace eval
{

const int psqtMG[7][64] = {
	// none
	{},
    // king
    {
          99,   55,   79,   55,   76,   74,   35,   44,
          34,   92,   52,   42,   37,   88,   13,  -19,
          29,  116,   17,   45,   -3,   52,   48,  -12,
          -2,    2,   27,  -16,  -29,  -20,   -4,  -32,
          21,    8,   -4,  -65,  -56,  -62,  -32,  -68,
          -4,    9,  -56,  -65,  -69,  -51,  -21,  -34,
          22,  -16,  -27,  -67,  -52,  -29,    9,    8,
         -41,   15,   -3,  -52,    0,  -31,   23,   18,
    },
    // queen
    {
         -41,  -18,   22,   38,   56,   59,   -4,  -20,
         -29,  -32,  -25,  -42,  -27,   70,   23,  105,
         -25,  -18,   -1,   14,   28,   63,   89,   49,
         -30,  -20,  -13,  -10,   -8,    1,  -11,    7,
         -19,  -10,  -13,   -9,   -3,   -7,    2,   -9,
         -16,    1,   -8,   -4,   -9,    1,    2,   -9,
         -19,    2,    0,   -2,    0,   12,   13,    2,
          -3,  -17,  -10,    3,  -13,  -24,  -41,  -11,
    },
    // rook
    {
          28,   34,   41,   47,   68,   84,   38,    7,
          -6,  -14,   18,   46,   19,   52,   63,   38,
          -6,   -2,    0,   20,   33,   42,   54,   36,
         -31,  -17,    1,   11,   -6,    8,   20,   11,
         -31,  -34,  -33,  -19,  -15,  -22,   -5,  -25,
         -37,  -29,  -16,  -13,  -12,  -21,   -2,  -15,
         -43,  -23,  -24,  -20,  -20,  -20,   -7,  -61,
         -25,  -21,   -9,   -5,   -6,  -16,  -41,  -27,
    },
    // bishop
    {
         -26,  -39,  -14,  -49,  -94,  -32,    1,  -47,
         -33,    5,  -14,   -6,   11,   47,   12,   27,
         -19,    0,   36,   11,   49,   40,   43,   32,
         -28,   -7,    9,   19,   19,    4,    2,   -3,
         -13,    2,    3,   20,   21,    5,    6,  -24,
          13,   10,    9,    4,    6,   13,    4,   10,
         -13,   17,    4,   -1,    0,   16,   26,    3,
           1,  -17,   -7,  -12,  -20,  -17,   -6,  -11,
    },
    // knight
    {
        -185,  -49,  -31,  -44,   28,  -84, -100,  -87,
         -55,  -22,   58,   21,   66,   65,   17,   11,
          -4,   19,   25,   53,   77,   99,   61,    8,
          13,   14,   13,   42,   21,   40,    7,   26,
          -5,    3,   15,   15,   20,   22,   11,  -12,
         -11,    0,   17,   11,   21,   14,   20,  -12,
         -14,  -19,    1,    6,    5,   13,    2,   -3,
         -42,  -12,  -36,  -18,  -19,   -8,  -15,  -59,
    },
    // pawn
    {
           0,    0,    0,    0,    0,    0,    0,    0,
          14,   18,    9,   33,   51,   47,    0,  -28,
         -22,  -11,    9,    4,   17,   41,   -1,  -27,
          -9,    5,   -1,    7,   15,    2,   -7,  -33,
         -22,    1,   -3,   11,    6,   -7,  -11,  -43,
         -16,   -1,    2,   -5,    6,  -16,   14,  -19,
         -19,    7,   -9,  -13,   -5,   13,   27,  -18,
           0,    0,    0,    0,    0,    0,    0,    0,
    }
};

const int psqtEG[7][64] = {
	// none
	{},
    {
         -61,  -29,  -32,  -24,  -25,  -19,  -16,  -37,
         -23,  -12,  -10,   -9,   -6,    1,   11,    2,
         -18,  -12,    2,   -3,    7,    8,   14,    4,
         -23,   -5,    2,   11,   12,   15,   10,    0,
         -33,   -9,    5,   20,   21,   21,    7,   -1,
         -28,   -9,   12,   20,   22,   17,    5,   -6,
         -31,   -8,    4,   16,   14,    9,   -6,  -19,
         -30,  -29,  -18,  -12,  -33,  -14,  -36,  -52,
    },
    {
           7,   12,   -3,    3,  -11,  -11,   -4,   21,
           4,    4,   21,   55,   39,   24,   23,  -70,
         -16,    1,   22,   12,   42,   -2,  -25,  -27,
          -8,   17,    9,   31,   47,   44,   31,   12,
          -3,    3,   10,   31,   22,   15,   12,   -4,
         -25,  -33,   14,    1,   17,    7,   10,  -11,
          -9,  -13,  -11,    1,    2,  -35,  -40,  -35,
         -22,  -22,  -19,  -42,  -10,  -23,  -16,  -43,
    },
    {
          10,    6,    5,    0,   -7,  -15,   -5,    4,
           9,   19,   11,    0,    1,   -3,  -10,  -11,
           7,    7,    6,    1,   -7,   -9,  -11,  -13,
           9,    5,    7,    0,    3,   -1,  -10,   -9,
           4,    8,   11,   10,    6,    3,   -8,   -8,
          -1,    3,   -1,    1,    1,   -2,  -13,  -12,
           3,    0,    4,    4,    2,    6,   -4,    6,
           0,    6,    5,    8,    2,    3,   10,  -13,
    },
    {
          -3,  -11,  -12,    5,    7,    0,  -14,    1,
          -4,    0,    6,   -4,    1,  -12,   -2,  -29,
           8,    7,    3,   14,   -2,    8,   -3,  -13,
          13,   16,   13,   14,   12,    5,    7,   -6,
          -2,    7,   17,   10,   11,   16,   -3,   -3,
          -9,    4,   11,   15,   22,    5,   -3,  -13,
          -4,  -13,   -7,    9,   10,   -1,   -5,  -17,
         -17,   -6,  -12,    1,    0,   -7,  -16,  -12,
    },
    {
           5,  -27,   -6,   -1,  -17,   -9,  -10,  -65,
          -8,    2,  -10,    2,  -16,  -19,  -16,  -31,
          -7,    1,   21,   18,   -4,   -1,  -15,   -9,
          -1,   21,   26,   32,   30,   23,   22,   -7,
           4,   12,   29,   28,   34,   18,    4,    5,
          -8,   12,    9,   27,   23,    9,    3,  -12,
         -14,   -5,    1,   10,   13,    5,   -5,  -12,
         -30,  -15,    1,    5,   -1,    4,  -16,  -10,
    },
    {
           0,    0,    0,    0,    0,    0,    0,    0,
         112,  112,   96,   68,   58,   69,  102,  102,
          49,   49,   36,   22,   10,    4,   29,   36,
          -7,  -15,  -25,  -33,  -38,  -30,  -18,  -15,
         -25,  -29,  -41,  -43,  -39,  -37,  -28,  -28,
         -32,  -30,  -42,  -32,  -34,  -31,  -30,  -32,
         -24,  -27,  -26,  -24,  -25,  -26,  -29,  -32,
           0,    0,    0,    0,    0,    0,    0,    0,
    }
};

int getPSQTMG(PieceType piece, int square)
{
	// static constexpr int* psqt = psqtMG[0];
	return psqtMG[static_cast<int>(piece)][square];
	// return psqt[64 * static_cast<int>(piece) + square];
}

int getPSQTEG(PieceType piece, int square)
{
	// static constexpr int* psqt = psqtEG[0];
	return psqtEG[static_cast<int>(piece)][square];
	// return psqt[64 * static_cast<int>(piece) + square];
}

}